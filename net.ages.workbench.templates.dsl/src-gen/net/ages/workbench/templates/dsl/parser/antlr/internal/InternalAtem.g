/*
* generated by Xtext
*/
grammar InternalAtem;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package net.ages.workbench.templates.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package net.ages.workbench.templates.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.ages.workbench.templates.dsl.services.AtemGrammarAccess;

}

@parser::members {

 	private AtemGrammarAccess grammarAccess;
 	
    public InternalAtemParser(TokenStream input, AtemGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AtemModel";	
   	}
   	
   	@Override
   	protected AtemGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAtemModel
entryRuleAtemModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtemModelRule()); }
	 iv_ruleAtemModel=ruleAtemModel 
	 { $current=$iv_ruleAtemModel.current; } 
	 EOF 
;

// Rule AtemModel
ruleAtemModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAtemModelAccess().getTemplateKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getDsl_Template_StatusTemplateStatusParserRuleCall_2_0()); 
	    }
		lv_dsl_Template_Status_2_0=ruleTemplateStatus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		set(
       			$current, 
       			"dsl_Template_Status",
        		lv_dsl_Template_Status_2_0, 
        		"TemplateStatus");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getImportsImportParserRuleCall_3_0()); 
	    }
		lv_imports_3_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_3_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getDsl_Template_DriverDriverParserRuleCall_4_0()); 
	    }
		lv_dsl_Template_Driver_4_0=ruleDriver		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		set(
       			$current, 
       			"dsl_Template_Driver",
        		lv_dsl_Template_Driver_4_0, 
        		"Driver");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getDsl_Template_headHeadParserRuleCall_5_0()); 
	    }
		lv_dsl_Template_head_5_0=ruleHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		set(
       			$current, 
       			"dsl_Template_head",
        		lv_dsl_Template_head_5_0, 
        		"Head");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getDsl_Template_prefacePrefaceParserRuleCall_6_0()); 
	    }
		lv_dsl_Template_preface_6_0=rulePreface		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		set(
       			$current, 
       			"dsl_Template_preface",
        		lv_dsl_Template_preface_6_0, 
        		"Preface");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAtemModelAccess().getDsl_Template_componentsAbstractComponentParserRuleCall_7_0()); 
	    }
		lv_dsl_Template_components_7_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAtemModelRule());
	        }
       		add(
       			$current, 
       			"dsl_Template_components",
        		lv_dsl_Template_components_7_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='End-Template' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAtemModelAccess().getEndTemplateKeyword_8());
    }
)
;





// Entry rule entryRuleHead
entryRuleHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeadRule()); }
	 iv_ruleHead=ruleHead 
	 { $current=$iv_ruleHead.current; } 
	 EOF 
;

// Rule Head
ruleHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Head' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeadAccess().getHeadKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeadAccess().getDsl_Head_componentsHeadComponentParserRuleCall_1_0()); 
	    }
		lv_dsl_Head_components_1_0=ruleHeadComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeadRule());
	        }
       		add(
       			$current, 
       			"dsl_Head_components",
        		lv_dsl_Head_components_1_0, 
        		"HeadComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Head' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeadAccess().getEnd_HeadKeyword_2());
    }
)
;





// Entry rule entryRuleHeadComponent
entryRuleHeadComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeadComponentRule()); }
	 iv_ruleHeadComponent=ruleHeadComponent 
	 { $current=$iv_ruleHeadComponent.current; } 
	 EOF 
;

// Rule HeadComponent
ruleHeadComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getCommemorationParserRuleCall_0()); 
    }
    this_Commemoration_0=ruleCommemoration
    { 
        $current = $this_Commemoration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getDateParserRuleCall_1()); 
    }
    this_Date_1=ruleDate
    { 
        $current = $this_Date_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageHeaderEvenParserRuleCall_2()); 
    }
    this_PageHeaderEven_2=rulePageHeaderEven
    { 
        $current = $this_PageHeaderEven_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageHeaderOddParserRuleCall_3()); 
    }
    this_PageHeaderOdd_3=rulePageHeaderOdd
    { 
        $current = $this_PageHeaderOdd_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageFooterEvenParserRuleCall_4()); 
    }
    this_PageFooterEven_4=rulePageFooterEven
    { 
        $current = $this_PageFooterEven_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageFooterOddParserRuleCall_5()); 
    }
    this_PageFooterOdd_5=rulePageFooterOdd
    { 
        $current = $this_PageFooterOdd_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageKeepWithNextParserRuleCall_6()); 
    }
    this_PageKeepWithNext_6=rulePageKeepWithNext
    { 
        $current = $this_PageKeepWithNext_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getPageNumberParserRuleCall_7()); 
    }
    this_PageNumber_7=rulePageNumber
    { 
        $current = $this_PageNumber_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeadComponentAccess().getTemplateTitleParserRuleCall_8()); 
    }
    this_TemplateTitle_8=ruleTemplateTitle
    { 
        $current = $this_TemplateTitle_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDriver
entryRuleDriver returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDriverRule()); }
	 iv_ruleDriver=ruleDriver 
	 { $current=$iv_ruleDriver.current; } 
	 EOF 
;

// Rule Driver
ruleDriver returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Generation_Driver' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDriverAccess().getGeneration_DriverKeyword_0());
    }
	otherlv_1='Service_Regular_Expression' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDriverAccess().getService_Regular_ExpressionKeyword_1());
    }
(
(
		lv_dsl_Driver_RegEx_2_0=RULE_STRING
		{
			newLeafNode(lv_dsl_Driver_RegEx_2_0, grammarAccess.getDriverAccess().getDsl_Driver_RegExSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDriverRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Driver_RegEx",
        		lv_dsl_Driver_RegEx_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3='Service_Status' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDriverAccess().getService_StatusKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDriverAccess().getDsl_Driver_StatusTemplateStatusesEnumRuleCall_3_1_0()); 
	    }
		lv_dsl_Driver_Status_4_0=ruleTemplateStatuses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDriverRule());
	        }
       		set(
       			$current, 
       			"dsl_Driver_Status",
        		lv_dsl_Driver_Status_4_0, 
        		"TemplateStatuses");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='End_Generation_Driver' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDriverAccess().getEnd_Generation_DriverKeyword_4());
    }
)
;





// Entry rule entryRuleTemplateTitle
entryRuleTemplateTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateTitleRule()); }
	 iv_ruleTemplateTitle=ruleTemplateTitle 
	 { $current=$iv_ruleTemplateTitle.current; } 
	 EOF 
;

// Rule TemplateTitle
ruleTemplateTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Template_Title' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateTitleAccess().getTemplate_TitleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateTitleAccess().getDsl_TemplateTitle_ElementsHeaderFooterFragmentParserRuleCall_1_0()); 
	    }
		lv_dsl_TemplateTitle_Elements_1_0=ruleHeaderFooterFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateTitleRule());
	        }
       		add(
       			$current, 
       			"dsl_TemplateTitle_Elements",
        		lv_dsl_TemplateTitle_Elements_1_0, 
        		"HeaderFooterFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateTitleAccess().getEnd_TitleKeyword_2());
    }
)
;





// Entry rule entryRulePageKeepWithNext
entryRulePageKeepWithNext returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageKeepWithNextRule()); }
	 iv_rulePageKeepWithNext=rulePageKeepWithNext 
	 { $current=$iv_rulePageKeepWithNext.current; } 
	 EOF 
;

// Rule PageKeepWithNext
rulePageKeepWithNext returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Page_Keep_With_Next' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageKeepWithNextAccess().getPage_Keep_With_NextKeyword_0());
    }
(
(
		lv_dsl_PageKeepWithNext_value_1_0=RULE_STRING
		{
			newLeafNode(lv_dsl_PageKeepWithNext_value_1_0, grammarAccess.getPageKeepWithNextAccess().getDsl_PageKeepWithNext_valueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPageKeepWithNextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_PageKeepWithNext_value",
        		lv_dsl_PageKeepWithNext_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='End_Page_Keep_With_Next' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageKeepWithNextAccess().getEnd_Page_Keep_With_NextKeyword_2());
    }
)
;





// Entry rule entryRulePageHeaderEven
entryRulePageHeaderEven returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageHeaderEvenRule()); }
	 iv_rulePageHeaderEven=rulePageHeaderEven 
	 { $current=$iv_rulePageHeaderEven.current; } 
	 EOF 
;

// Rule PageHeaderEven
rulePageHeaderEven returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Page_Header_Even' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageHeaderEvenAccess().getPage_Header_EvenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageHeaderEvenAccess().getDsl_PageHeader_columnsHeaderFooterColumnParserRuleCall_1_0()); 
	    }
		lv_dsl_PageHeader_columns_1_0=ruleHeaderFooterColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageHeaderEvenRule());
	        }
       		add(
       			$current, 
       			"dsl_PageHeader_columns",
        		lv_dsl_PageHeader_columns_1_0, 
        		"HeaderFooterColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Page_Header_Even' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageHeaderEvenAccess().getEnd_Page_Header_EvenKeyword_2());
    }
)
;





// Entry rule entryRulePageHeaderOdd
entryRulePageHeaderOdd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageHeaderOddRule()); }
	 iv_rulePageHeaderOdd=rulePageHeaderOdd 
	 { $current=$iv_rulePageHeaderOdd.current; } 
	 EOF 
;

// Rule PageHeaderOdd
rulePageHeaderOdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Page_Header_Odd' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageHeaderOddAccess().getPage_Header_OddKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageHeaderOddAccess().getDsl_PageHeader_columnsHeaderFooterColumnParserRuleCall_1_0()); 
	    }
		lv_dsl_PageHeader_columns_1_0=ruleHeaderFooterColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageHeaderOddRule());
	        }
       		add(
       			$current, 
       			"dsl_PageHeader_columns",
        		lv_dsl_PageHeader_columns_1_0, 
        		"HeaderFooterColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Page_Header_Odd' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageHeaderOddAccess().getEnd_Page_Header_OddKeyword_2());
    }
)
;





// Entry rule entryRulePageFooterEven
entryRulePageFooterEven returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageFooterEvenRule()); }
	 iv_rulePageFooterEven=rulePageFooterEven 
	 { $current=$iv_rulePageFooterEven.current; } 
	 EOF 
;

// Rule PageFooterEven
rulePageFooterEven returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Page_Footer_Even' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageFooterEvenAccess().getPage_Footer_EvenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageFooterEvenAccess().getDsl_PageHeader_columnsHeaderFooterColumnParserRuleCall_1_0()); 
	    }
		lv_dsl_PageHeader_columns_1_0=ruleHeaderFooterColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageFooterEvenRule());
	        }
       		add(
       			$current, 
       			"dsl_PageHeader_columns",
        		lv_dsl_PageHeader_columns_1_0, 
        		"HeaderFooterColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Page_Footer_Even' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageFooterEvenAccess().getEnd_Page_Footer_EvenKeyword_2());
    }
)
;





// Entry rule entryRulePageFooterOdd
entryRulePageFooterOdd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageFooterOddRule()); }
	 iv_rulePageFooterOdd=rulePageFooterOdd 
	 { $current=$iv_rulePageFooterOdd.current; } 
	 EOF 
;

// Rule PageFooterOdd
rulePageFooterOdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Page_Footer_Odd' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageFooterOddAccess().getPage_Footer_OddKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPageFooterOddAccess().getDsl_PageHeader_columnsHeaderFooterColumnParserRuleCall_1_0()); 
	    }
		lv_dsl_PageHeader_columns_1_0=ruleHeaderFooterColumn		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPageFooterOddRule());
	        }
       		add(
       			$current, 
       			"dsl_PageHeader_columns",
        		lv_dsl_PageHeader_columns_1_0, 
        		"HeaderFooterColumn");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Page_Footer_Odd' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageFooterOddAccess().getEnd_Page_Footer_OddKeyword_2());
    }
)
;





// Entry rule entryRuleHeaderFooterColumn
entryRuleHeaderFooterColumn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterColumnRule()); }
	 iv_ruleHeaderFooterColumn=ruleHeaderFooterColumn 
	 { $current=$iv_ruleHeaderFooterColumn.current; } 
	 EOF 
;

// Rule HeaderFooterColumn
ruleHeaderFooterColumn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHeaderFooterColumnAccess().getHeaderFooterColumnLeftParserRuleCall_0()); 
    }
    this_HeaderFooterColumnLeft_0=ruleHeaderFooterColumnLeft
    { 
        $current = $this_HeaderFooterColumnLeft_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterColumnAccess().getHeaderFooterColumnCenterParserRuleCall_1()); 
    }
    this_HeaderFooterColumnCenter_1=ruleHeaderFooterColumnCenter
    { 
        $current = $this_HeaderFooterColumnCenter_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterColumnAccess().getHeaderFooterColumnRightParserRuleCall_2()); 
    }
    this_HeaderFooterColumnRight_2=ruleHeaderFooterColumnRight
    { 
        $current = $this_HeaderFooterColumnRight_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHeaderFooterColumnLeft
entryRuleHeaderFooterColumnLeft returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterColumnLeftRule()); }
	 iv_ruleHeaderFooterColumnLeft=ruleHeaderFooterColumnLeft 
	 { $current=$iv_ruleHeaderFooterColumnLeft.current; } 
	 EOF 
;

// Rule HeaderFooterColumnLeft
ruleHeaderFooterColumnLeft returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='left' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeaderFooterColumnLeftAccess().getLeftKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterColumnLeftAccess().getDsl_HeaderFooterColumn_fragmentsHeaderFooterFragmentParserRuleCall_1_0()); 
	    }
		lv_dsl_HeaderFooterColumn_fragments_1_0=ruleHeaderFooterFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterColumnLeftRule());
	        }
       		add(
       			$current, 
       			"dsl_HeaderFooterColumn_fragments",
        		lv_dsl_HeaderFooterColumn_fragments_1_0, 
        		"HeaderFooterFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleHeaderFooterColumnCenter
entryRuleHeaderFooterColumnCenter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterColumnCenterRule()); }
	 iv_ruleHeaderFooterColumnCenter=ruleHeaderFooterColumnCenter 
	 { $current=$iv_ruleHeaderFooterColumnCenter.current; } 
	 EOF 
;

// Rule HeaderFooterColumnCenter
ruleHeaderFooterColumnCenter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='center' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeaderFooterColumnCenterAccess().getCenterKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterColumnCenterAccess().getDsl_HeaderFooterColumn_fragmentsHeaderFooterFragmentParserRuleCall_1_0()); 
	    }
		lv_dsl_HeaderFooterColumn_fragments_1_0=ruleHeaderFooterFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterColumnCenterRule());
	        }
       		add(
       			$current, 
       			"dsl_HeaderFooterColumn_fragments",
        		lv_dsl_HeaderFooterColumn_fragments_1_0, 
        		"HeaderFooterFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleHeaderFooterColumnRight
entryRuleHeaderFooterColumnRight returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterColumnRightRule()); }
	 iv_ruleHeaderFooterColumnRight=ruleHeaderFooterColumnRight 
	 { $current=$iv_ruleHeaderFooterColumnRight.current; } 
	 EOF 
;

// Rule HeaderFooterColumnRight
ruleHeaderFooterColumnRight returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='right' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeaderFooterColumnRightAccess().getRightKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterColumnRightAccess().getDsl_HeaderFooterColumn_fragmentsHeaderFooterFragmentParserRuleCall_1_0()); 
	    }
		lv_dsl_HeaderFooterColumn_fragments_1_0=ruleHeaderFooterFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterColumnRightRule());
	        }
       		add(
       			$current, 
       			"dsl_HeaderFooterColumn_fragments",
        		lv_dsl_HeaderFooterColumn_fragments_1_0, 
        		"HeaderFooterFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleHeaderFooterFragment
entryRuleHeaderFooterFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterFragmentRule()); }
	 iv_ruleHeaderFooterFragment=ruleHeaderFooterFragment 
	 { $current=$iv_ruleHeaderFooterFragment.current; } 
	 EOF 
;

// Rule HeaderFooterFragment
ruleHeaderFooterFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterTextParserRuleCall_0()); 
    }
    this_HeaderFooterText_0=ruleHeaderFooterText
    { 
        $current = $this_HeaderFooterText_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterDateParserRuleCall_1()); 
    }
    this_HeaderFooterDate_1=ruleHeaderFooterDate
    { 
        $current = $this_HeaderFooterDate_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterPageNumberParserRuleCall_2()); 
    }
    this_HeaderFooterPageNumber_2=ruleHeaderFooterPageNumber
    { 
        $current = $this_HeaderFooterPageNumber_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterLookupParserRuleCall_3()); 
    }
    this_HeaderFooterLookup_3=ruleHeaderFooterLookup
    { 
        $current = $this_HeaderFooterLookup_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterTitleParserRuleCall_4()); 
    }
    this_HeaderFooterTitle_4=ruleHeaderFooterTitle
    { 
        $current = $this_HeaderFooterTitle_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getHeaderFooterFragmentAccess().getHeaderFooterCommemorationParserRuleCall_5()); 
    }
    this_HeaderFooterCommemoration_5=ruleHeaderFooterCommemoration
    { 
        $current = $this_HeaderFooterCommemoration_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleHeaderFooterText
entryRuleHeaderFooterText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterTextRule()); }
	 iv_ruleHeaderFooterText=ruleHeaderFooterText 
	 { $current=$iv_ruleHeaderFooterText.current; } 
	 EOF 
;

// Rule HeaderFooterText
ruleHeaderFooterText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@text' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeaderFooterTextAccess().getTextKeyword_0());
    }
(
(
		lv_dsl_HeaderFooterText_1_0=RULE_STRING
		{
			newLeafNode(lv_dsl_HeaderFooterText_1_0, grammarAccess.getHeaderFooterTextAccess().getDsl_HeaderFooterTextSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeaderFooterTextRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_HeaderFooterText",
        		lv_dsl_HeaderFooterText_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleHeaderFooterDate
entryRuleHeaderFooterDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterDateRule()); }
	 iv_ruleHeaderFooterDate=ruleHeaderFooterDate 
	 { $current=$iv_ruleHeaderFooterDate.current; } 
	 EOF 
;

// Rule HeaderFooterDate
ruleHeaderFooterDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dsl_HeaderFooterDate_0_0=	'@date' 
    {
        newLeafNode(lv_dsl_HeaderFooterDate_0_0, grammarAccess.getHeaderFooterDateAccess().getDsl_HeaderFooterDateDateKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeaderFooterDateRule());
	        }
       		setWithLastConsumed($current, "dsl_HeaderFooterDate", true, "@date");
	    }

)
)(	otherlv_1='lang' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHeaderFooterDateAccess().getLangKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterDateAccess().getDsl_HeaderFooterDate_LanguageLanguageEnumRuleCall_1_1_0()); 
	    }
		lv_dsl_HeaderFooterDate_Language_2_0=ruleLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterDateRule());
	        }
       		set(
       			$current, 
       			"dsl_HeaderFooterDate_Language",
        		lv_dsl_HeaderFooterDate_Language_2_0, 
        		"Language");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleHeaderFooterPageNumber
entryRuleHeaderFooterPageNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterPageNumberRule()); }
	 iv_ruleHeaderFooterPageNumber=ruleHeaderFooterPageNumber 
	 { $current=$iv_ruleHeaderFooterPageNumber.current; } 
	 EOF 
;

// Rule HeaderFooterPageNumber
ruleHeaderFooterPageNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_HeaderFooterPageNumber_0_0=	'@pageNbr' 
    {
        newLeafNode(lv_dsl_HeaderFooterPageNumber_0_0, grammarAccess.getHeaderFooterPageNumberAccess().getDsl_HeaderFooterPageNumberPageNbrKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeaderFooterPageNumberRule());
	        }
       		setWithLastConsumed($current, "dsl_HeaderFooterPageNumber", true, "@pageNbr");
	    }

)
)
;





// Entry rule entryRuleHeaderFooterLookup
entryRuleHeaderFooterLookup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterLookupRule()); }
	 iv_ruleHeaderFooterLookup=ruleHeaderFooterLookup 
	 { $current=$iv_ruleHeaderFooterLookup.current; } 
	 EOF 
;

// Rule HeaderFooterLookup
ruleHeaderFooterLookup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@lookup' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeaderFooterLookupAccess().getLookupKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterLookupAccess().getDsl_HeaderFooterLookup_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_HeaderFooterLookup_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterLookupRule());
	        }
       		add(
       			$current, 
       			"dsl_HeaderFooterLookup_Elements",
        		lv_dsl_HeaderFooterLookup_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='lang' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeaderFooterLookupAccess().getLangKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderFooterLookupAccess().getDsl_HeaderFooterLookup_LanguageLanguageEnumRuleCall_3_0()); 
	    }
		lv_dsl_HeaderFooterLookup_Language_3_0=ruleLanguage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderFooterLookupRule());
	        }
       		set(
       			$current, 
       			"dsl_HeaderFooterLookup_Language",
        		lv_dsl_HeaderFooterLookup_Language_3_0, 
        		"Language");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHeaderFooterTitle
entryRuleHeaderFooterTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterTitleRule()); }
	 iv_ruleHeaderFooterTitle=ruleHeaderFooterTitle 
	 { $current=$iv_ruleHeaderFooterTitle.current; } 
	 EOF 
;

// Rule HeaderFooterTitle
ruleHeaderFooterTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_HeaderFooterTitle_0_0=	'@title' 
    {
        newLeafNode(lv_dsl_HeaderFooterTitle_0_0, grammarAccess.getHeaderFooterTitleAccess().getDsl_HeaderFooterTitleTitleKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeaderFooterTitleRule());
	        }
       		setWithLastConsumed($current, "dsl_HeaderFooterTitle", true, "@title");
	    }

)
)
;





// Entry rule entryRuleHeaderFooterCommemoration
entryRuleHeaderFooterCommemoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderFooterCommemorationRule()); }
	 iv_ruleHeaderFooterCommemoration=ruleHeaderFooterCommemoration 
	 { $current=$iv_ruleHeaderFooterCommemoration.current; } 
	 EOF 
;

// Rule HeaderFooterCommemoration
ruleHeaderFooterCommemoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_HeaderFooterCommemoration_0_0=	'@commemoration' 
    {
        newLeafNode(lv_dsl_HeaderFooterCommemoration_0_0, grammarAccess.getHeaderFooterCommemorationAccess().getDsl_HeaderFooterCommemorationCommemorationKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHeaderFooterCommemorationRule());
	        }
       		setWithLastConsumed($current, "dsl_HeaderFooterCommemoration", true, "@commemoration");
	    }

)
)
;





// Entry rule entryRuleCommemoration
entryRuleCommemoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommemorationRule()); }
	 iv_ruleCommemoration=ruleCommemoration 
	 { $current=$iv_ruleCommemoration.current; } 
	 EOF 
;

// Rule Commemoration
ruleCommemoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Template_Commemoration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommemorationAccess().getTemplate_CommemorationKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommemorationAccess().getDsl_Commemoration_ElementsHeaderFooterFragmentParserRuleCall_1_0()); 
	    }
		lv_dsl_Commemoration_Elements_1_0=ruleHeaderFooterFragment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommemorationRule());
	        }
       		add(
       			$current, 
       			"dsl_Commemoration_Elements",
        		lv_dsl_Commemoration_Elements_1_0, 
        		"HeaderFooterFragment");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_2='End_Template_Commemoration' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommemorationAccess().getEnd_Template_CommemorationKeyword_2());
    }
)
;





// Entry rule entryRuleTemplateStatus
entryRuleTemplateStatus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateStatusRule()); }
	 iv_ruleTemplateStatus=ruleTemplateStatus 
	 { $current=$iv_ruleTemplateStatus.current; } 
	 EOF 
;

// Rule TemplateStatus
ruleTemplateStatus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Status' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateStatusAccess().getStatusKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateStatusAccess().getDsl_TemplateStatusTemplateStatusesEnumRuleCall_1_0()); 
	    }
		lv_dsl_TemplateStatus_1_0=ruleTemplateStatuses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateStatusRule());
	        }
       		set(
       			$current, 
       			"dsl_TemplateStatus",
        		lv_dsl_TemplateStatus_1_0, 
        		"TemplateStatuses");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAbstractComponent
entryRuleAbstractComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractComponentRule()); }
	 iv_ruleAbstractComponent=ruleAbstractComponent 
	 { $current=$iv_ruleAbstractComponent.current; } 
	 EOF 
;

// Rule AbstractComponent
ruleAbstractComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getActorParserRuleCall_0()); 
    }
    this_Actor_0=ruleActor
    { 
        $current = $this_Actor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getAidParserRuleCall_1()); 
    }
    this_Aid_1=ruleAid
    { 
        $current = $this_Aid_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getBlockParserRuleCall_2()); 
    }
    this_Block_2=ruleBlock
    { 
        $current = $this_Block_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getBreakParserRuleCall_3()); 
    }
    this_Break_3=ruleBreak
    { 
        $current = $this_Break_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getDialogParserRuleCall_4()); 
    }
    this_Dialog_4=ruleDialog
    { 
        $current = $this_Dialog_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getTitleParserRuleCall_5()); 
    }
    this_Title_5=ruleTitle
    { 
        $current = $this_Title_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getHeading1ParserRuleCall_6()); 
    }
    this_Heading1_6=ruleHeading1
    { 
        $current = $this_Heading1_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getHeading2ParserRuleCall_7()); 
    }
    this_Heading2_7=ruleHeading2
    { 
        $current = $this_Heading2_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getHeading3ParserRuleCall_8()); 
    }
    this_Heading3_8=ruleHeading3
    { 
        $current = $this_Heading3_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getHymnParserRuleCall_9()); 
    }
    this_Hymn_9=ruleHymn
    { 
        $current = $this_Hymn_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getMediaParserRuleCall_10()); 
    }
    this_Media_10=ruleMedia
    { 
        $current = $this_Media_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getInfoParserRuleCall_11()); 
    }
    this_Info_11=ruleInfo
    { 
        $current = $this_Info_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getLitBookParserRuleCall_12()); 
    }
    this_LitBook_12=ruleLitBook
    { 
        $current = $this_LitBook_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getParagraphParserRuleCall_13()); 
    }
    this_Paragraph_13=ruleParagraph
    { 
        $current = $this_Paragraph_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getPassThroughHtmlParserRuleCall_14()); 
    }
    this_PassThroughHtml_14=rulePassThroughHtml
    { 
        $current = $this_PassThroughHtml_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getPassThroughPdfParserRuleCall_15()); 
    }
    this_PassThroughPdf_15=rulePassThroughPdf
    { 
        $current = $this_PassThroughPdf_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getReadingParserRuleCall_16()); 
    }
    this_Reading_16=ruleReading
    { 
        $current = $this_Reading_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getRestoreLocaleParserRuleCall_17()); 
    }
    this_RestoreLocale_17=ruleRestoreLocale
    { 
        $current = $this_RestoreLocale_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getRubricParserRuleCall_18()); 
    }
    this_Rubric_18=ruleRubric
    { 
        $current = $this_Rubric_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getSectionParserRuleCall_19()); 
    }
    this_Section_19=ruleSection
    { 
        $current = $this_Section_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getSectionFragmentParserRuleCall_20()); 
    }
    this_SectionFragment_20=ruleSectionFragment
    { 
        $current = $this_SectionFragment_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getSetLocaleParserRuleCall_21()); 
    }
    this_SetLocale_21=ruleSetLocale
    { 
        $current = $this_SetLocale_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getTemplateFragmentParserRuleCall_22()); 
    }
    this_TemplateFragment_22=ruleTemplateFragment
    { 
        $current = $this_TemplateFragment_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getSubTitleParserRuleCall_23()); 
    }
    this_SubTitle_23=ruleSubTitle
    { 
        $current = $this_SubTitle_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getVerseParserRuleCall_24()); 
    }
    this_Verse_24=ruleVerse
    { 
        $current = $this_Verse_24.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getVersionParserRuleCall_25()); 
    }
    this_Version_25=ruleVersion
    { 
        $current = $this_Version_25.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getVersionSwitchParserRuleCall_26()); 
    }
    this_VersionSwitch_26=ruleVersionSwitch
    { 
        $current = $this_VersionSwitch_26.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenDateParserRuleCall_27()); 
    }
    this_WhenDate_27=ruleWhenDate
    { 
        $current = $this_WhenDate_27.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenDayNameParserRuleCall_28()); 
    }
    this_WhenDayName_28=ruleWhenDayName
    { 
        $current = $this_WhenDayName_28.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenExistsParserRuleCall_29()); 
    }
    this_WhenExists_29=ruleWhenExists
    { 
        $current = $this_WhenExists_29.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenLukanCycleDayParserRuleCall_30()); 
    }
    this_WhenLukanCycleDay_30=ruleWhenLukanCycleDay
    { 
        $current = $this_WhenLukanCycleDay_30.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenModeOfWeekParserRuleCall_31()); 
    }
    this_WhenModeOfWeek_31=ruleWhenModeOfWeek
    { 
        $current = $this_WhenModeOfWeek_31.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenPaschaParserRuleCall_32()); 
    }
    this_WhenPascha_32=ruleWhenPascha
    { 
        $current = $this_WhenPascha_32.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenMovableCycleDayParserRuleCall_33()); 
    }
    this_WhenMovableCycleDay_33=ruleWhenMovableCycleDay
    { 
        $current = $this_WhenMovableCycleDay_33.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenPentecostarionDayParserRuleCall_34()); 
    }
    this_WhenPentecostarionDay_34=ruleWhenPentecostarionDay
    { 
        $current = $this_WhenPentecostarionDay_34.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenSundayAfterElevationOfCrossDayParserRuleCall_35()); 
    }
    this_WhenSundayAfterElevationOfCrossDay_35=ruleWhenSundayAfterElevationOfCrossDay
    { 
        $current = $this_WhenSundayAfterElevationOfCrossDay_35.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenTriodionDayParserRuleCall_36()); 
    }
    this_WhenTriodionDay_36=ruleWhenTriodionDay
    { 
        $current = $this_WhenTriodionDay_36.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractComponentAccess().getWhenSundaysBeforeTriodionParserRuleCall_37()); 
    }
    this_WhenSundaysBeforeTriodion_37=ruleWhenSundaysBeforeTriodion
    { 
        $current = $this_WhenSundaysBeforeTriodion_37.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 iv_ruleQualifiedNameWithWildCard=ruleQualifiedNameWithWildCard 
	 { $current=$iv_ruleQualifiedNameWithWildCard.current.getText(); }  
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); 
    }
    this_QualifiedName_0=ruleQualifiedName    {
		$current.merge(this_QualifiedName_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); 
	    }
		lv_importedNamespace_1_0=ruleQualifiedNameWithWildCard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"QualifiedNameWithWildCard");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersionSwitch
entryRuleVersionSwitch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionSwitchRule()); }
	 iv_ruleVersionSwitch=ruleVersionSwitch 
	 { $current=$iv_ruleVersionSwitch.current; } 
	 EOF 
;

// Rule VersionSwitch
ruleVersionSwitch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Switch-Version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionSwitchAccess().getSwitchVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionSwitchAccess().getDsl_VersionSwitch_flagVersionSwitchTypeEnumRuleCall_1_0()); 
	    }
		lv_dsl_VersionSwitch_flag_1_0=ruleVersionSwitchType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionSwitchRule());
	        }
       		set(
       			$current, 
       			"dsl_VersionSwitch_flag",
        		lv_dsl_VersionSwitch_flag_1_0, 
        		"VersionSwitchType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='End-Switch-Version' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVersionSwitchAccess().getEndSwitchVersionKeyword_2());
    }
)
;





// Entry rule entryRuleResourceText
entryRuleResourceText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getResourceTextRule()); }
	 iv_ruleResourceText=ruleResourceText 
	 { $current=$iv_ruleResourceText.current; } 
	 EOF 
;

// Rule ResourceText
ruleResourceText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sid' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getResourceTextAccess().getSidKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceTextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getResourceTextAccess().getDsl_ResourceTextRefDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_dsl_ResourceText_Media_Off_2_0=	'media-off' 
    {
        newLeafNode(lv_dsl_ResourceText_Media_Off_2_0, grammarAccess.getResourceTextAccess().getDsl_ResourceText_Media_OffMediaOffKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getResourceTextRule());
	        }
       		setWithLastConsumed($current, "dsl_ResourceText_Media_Off", true, "media-off");
	    }

)
)?)
;





// Entry rule entryRuleLookup
entryRuleLookup returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLookupRule()); }
	 iv_ruleLookup=ruleLookup 
	 { $current=$iv_ruleLookup.current; } 
	 EOF 
;

// Rule Lookup
ruleLookup returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rid' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLookupAccess().getRidKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLookupAccess().getDsl_ResourceTextRefDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_dsl_Lookup_Media_Off_2_0=	'media-off' 
    {
        newLeafNode(lv_dsl_Lookup_Media_Off_2_0, grammarAccess.getLookupAccess().getDsl_Lookup_Media_OffMediaOffKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupRule());
	        }
       		setWithLastConsumed($current, "dsl_Lookup_Media_Off", true, "media-off");
	    }

)
)?((
(
		lv_dsl_Lookup_Override_Mode_Set_3_0=	'@mode' 
    {
        newLeafNode(lv_dsl_Lookup_Override_Mode_Set_3_0, grammarAccess.getLookupAccess().getDsl_Lookup_Override_Mode_SetModeKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupRule());
	        }
       		setWithLastConsumed($current, "dsl_Lookup_Override_Mode_Set", true, "@mode");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLookupAccess().getDsl_Lookup_OverrideModeModeTypesEnumRuleCall_3_1_0()); 
	    }
		lv_dsl_Lookup_OverrideMode_4_0=ruleModeTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLookupRule());
	        }
       		set(
       			$current, 
       			"dsl_Lookup_OverrideMode",
        		lv_dsl_Lookup_OverrideMode_4_0, 
        		"ModeTypes");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		lv_dsl_Lookup_Override__Day_Set_5_0=	'@day' 
    {
        newLeafNode(lv_dsl_Lookup_Override__Day_Set_5_0, grammarAccess.getLookupAccess().getDsl_Lookup_Override__Day_SetDayKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLookupRule());
	        }
       		setWithLastConsumed($current, "dsl_Lookup_Override__Day_Set", true, "@day");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLookupAccess().getDsl_Lookup_OverrideDayDowTypesEnumRuleCall_4_1_0()); 
	    }
		lv_dsl_Lookup_OverrideDay_6_0=ruleDowTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLookupRule());
	        }
       		set(
       			$current, 
       			"dsl_Lookup_OverrideDay",
        		lv_dsl_Lookup_OverrideDay_6_0, 
        		"DowTypes");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLDP
entryRuleLDP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLDPRule()); }
	 iv_ruleLDP=ruleLDP 
	 { $current=$iv_ruleLDP.current; } 
	 EOF 
;

// Rule LDP
ruleLDP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ldp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLDPAccess().getLdpKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLDPAccess().getDsl_LDPLdpTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_LDP_1_0=ruleLdpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLDPRule());
	        }
       		add(
       			$current, 
       			"dsl_LDP",
        		lv_dsl_LDP_1_0, 
        		"LdpType");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleTaggedText
entryRuleTaggedText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaggedTextRule()); }
	 iv_ruleTaggedText=ruleTaggedText 
	 { $current=$iv_ruleTaggedText.current; } 
	 EOF 
;

// Rule TaggedText
ruleTaggedText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTaggedTextAccess().getLessThanSignKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaggedTextRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTaggedTextAccess().getDsl_TaggedText_tagDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTaggedTextAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaggedTextAccess().getDsl_TaggedTextElementTypeParserRuleCall_3_0()); 
	    }
		lv_dsl_TaggedText_3_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaggedTextRule());
	        }
       		add(
       			$current, 
       			"dsl_TaggedText",
        		lv_dsl_TaggedText_3_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='</>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTaggedTextAccess().getLessThanSignSolidusGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleInfo
entryRuleInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfoRule()); }
	 iv_ruleInfo=ruleInfo 
	 { $current=$iv_ruleInfo.current; } 
	 EOF 
;

// Rule Info
ruleInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Info' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInfoAccess().getInfoKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInfoAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInfoAccess().getDsl_Info_ElementsInfoElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Info_Elements_2_0=ruleInfoElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfoRule());
	        }
       		add(
       			$current, 
       			"dsl_Info_Elements",
        		lv_dsl_Info_Elements_2_0, 
        		"InfoElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='End-Info' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfoAccess().getEndInfoKeyword_3());
    }
)
;





// Entry rule entryRuleInfoElementType
entryRuleInfoElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfoElementTypeRule()); }
	 iv_ruleInfoElementType=ruleInfoElementType 
	 { $current=$iv_ruleInfoElementType.current; } 
	 EOF 
;

// Rule InfoElementType
ruleInfoElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInfoElementTypeAccess().getVersionSwitchParserRuleCall_0()); 
    }
    this_VersionSwitch_0=ruleVersionSwitch
    { 
        $current = $this_VersionSwitch_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInfoElementTypeAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInfoElementTypeAccess().getParagraphParserRuleCall_2()); 
    }
    this_Paragraph_2=ruleParagraph
    { 
        $current = $this_Paragraph_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInfoElementTypeAccess().getSubTitleParserRuleCall_3()); 
    }
    this_SubTitle_3=ruleSubTitle
    { 
        $current = $this_SubTitle_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInfoElementTypeAccess().getTitleParserRuleCall_4()); 
    }
    this_Title_4=ruleTitle
    { 
        $current = $this_Title_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDate
entryRuleDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateRule()); }
	 iv_ruleDate=ruleDate 
	 { $current=$iv_ruleDate.current; } 
	 EOF 
;

// Rule Date
ruleDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Set_Date' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDateAccess().getSet_DateKeyword_0());
    }
	otherlv_1='month' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateAccess().getMonthKeyword_1());
    }
(
(
		lv_dsl_Date_month_2_0=RULE_INT
		{
			newLeafNode(lv_dsl_Date_month_2_0, grammarAccess.getDateAccess().getDsl_Date_monthINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Date_month",
        		lv_dsl_Date_month_2_0, 
        		"INT");
	    }

)
)	otherlv_3='day' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateAccess().getDayKeyword_3());
    }
(
(
		lv_dsl_Date_day_4_0=RULE_INT
		{
			newLeafNode(lv_dsl_Date_day_4_0, grammarAccess.getDateAccess().getDsl_Date_dayINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Date_day",
        		lv_dsl_Date_day_4_0, 
        		"INT");
	    }

)
)(	otherlv_5='year' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDateAccess().getYearKeyword_5_0());
    }
(
(
		lv_dsl_Date_year_6_0=RULE_INT
		{
			newLeafNode(lv_dsl_Date_year_6_0, grammarAccess.getDateAccess().getDsl_Date_yearINTTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Date_year",
        		lv_dsl_Date_year_6_0, 
        		"INT");
	    }

)
))?	otherlv_7='End_Date' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDateAccess().getEnd_DateKeyword_6());
    }
)
;





// Entry rule entryRulePreface
entryRulePreface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefaceRule()); }
	 iv_rulePreface=rulePreface 
	 { $current=$iv_rulePreface.current; } 
	 EOF 
;

// Rule Preface
rulePreface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Preface' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrefaceAccess().getPrefaceKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPrefaceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrefaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrefaceAccess().getDsl_Preface_ElementsPrefaceElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Preface_Elements_2_0=rulePrefaceElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefaceRule());
	        }
       		add(
       			$current, 
       			"dsl_Preface_Elements",
        		lv_dsl_Preface_Elements_2_0, 
        		"PrefaceElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='End-Preface' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPrefaceAccess().getEndPrefaceKeyword_3());
    }
)
;





// Entry rule entryRulePrefaceElementType
entryRulePrefaceElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefaceElementTypeRule()); }
	 iv_rulePrefaceElementType=rulePrefaceElementType 
	 { $current=$iv_rulePrefaceElementType.current; } 
	 EOF 
;

// Rule PrefaceElementType
rulePrefaceElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getVersionSwitchParserRuleCall_0()); 
    }
    this_VersionSwitch_0=ruleVersionSwitch
    { 
        $current = $this_VersionSwitch_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getParagraphParserRuleCall_2()); 
    }
    this_Paragraph_2=ruleParagraph
    { 
        $current = $this_Paragraph_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getSectionParserRuleCall_3()); 
    }
    this_Section_3=ruleSection
    { 
        $current = $this_Section_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getSectionFragmentParserRuleCall_4()); 
    }
    this_SectionFragment_4=ruleSectionFragment
    { 
        $current = $this_SectionFragment_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getSubTitleParserRuleCall_5()); 
    }
    this_SubTitle_5=ruleSubTitle
    { 
        $current = $this_SubTitle_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getTemplateFragmentParserRuleCall_6()); 
    }
    this_TemplateFragment_6=ruleTemplateFragment
    { 
        $current = $this_TemplateFragment_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrefaceElementTypeAccess().getTitleParserRuleCall_7()); 
    }
    this_Title_7=ruleTitle
    { 
        $current = $this_Title_7.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionAccess().getSectionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='role' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSectionAccess().getRoleKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSectionAccess().getDsl_Section_RoleDefinitionCrossReference_2_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSectionAccess().getDsl_Section_ElementsSectionElementTypeParserRuleCall_3_0()); 
	    }
		lv_dsl_Section_Elements_4_0=ruleSectionElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSectionRule());
	        }
       		add(
       			$current, 
       			"dsl_Section_Elements",
        		lv_dsl_Section_Elements_4_0, 
        		"SectionElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='End-Section' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSectionAccess().getEndSectionKeyword_4());
    }
)
;





// Entry rule entryRuleSectionElementType
entryRuleSectionElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionElementTypeRule()); }
	 iv_ruleSectionElementType=ruleSectionElementType 
	 { $current=$iv_ruleSectionElementType.current; } 
	 EOF 
;

// Rule SectionElementType
ruleSectionElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getActorParserRuleCall_0()); 
    }
    this_Actor_0=ruleActor
    { 
        $current = $this_Actor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getBlockParserRuleCall_1()); 
    }
    this_Block_1=ruleBlock
    { 
        $current = $this_Block_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getBreakParserRuleCall_2()); 
    }
    this_Break_2=ruleBreak
    { 
        $current = $this_Break_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getDateParserRuleCall_3()); 
    }
    this_Date_3=ruleDate
    { 
        $current = $this_Date_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getDialogParserRuleCall_4()); 
    }
    this_Dialog_4=ruleDialog
    { 
        $current = $this_Dialog_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getHeading1ParserRuleCall_5()); 
    }
    this_Heading1_5=ruleHeading1
    { 
        $current = $this_Heading1_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getHeading2ParserRuleCall_6()); 
    }
    this_Heading2_6=ruleHeading2
    { 
        $current = $this_Heading2_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getHeading3ParserRuleCall_7()); 
    }
    this_Heading3_7=ruleHeading3
    { 
        $current = $this_Heading3_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getHymnParserRuleCall_8()); 
    }
    this_Hymn_8=ruleHymn
    { 
        $current = $this_Hymn_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getMediaParserRuleCall_9()); 
    }
    this_Media_9=ruleMedia
    { 
        $current = $this_Media_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getParagraphParserRuleCall_10()); 
    }
    this_Paragraph_10=ruleParagraph
    { 
        $current = $this_Paragraph_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getPassThroughHtmlParserRuleCall_11()); 
    }
    this_PassThroughHtml_11=rulePassThroughHtml
    { 
        $current = $this_PassThroughHtml_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getPassThroughPdfParserRuleCall_12()); 
    }
    this_PassThroughPdf_12=rulePassThroughPdf
    { 
        $current = $this_PassThroughPdf_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getReadingParserRuleCall_13()); 
    }
    this_Reading_13=ruleReading
    { 
        $current = $this_Reading_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getRestoreLocaleParserRuleCall_14()); 
    }
    this_RestoreLocale_14=ruleRestoreLocale
    { 
        $current = $this_RestoreLocale_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getRubricParserRuleCall_15()); 
    }
    this_Rubric_15=ruleRubric
    { 
        $current = $this_Rubric_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getSectionParserRuleCall_16()); 
    }
    this_Section_16=ruleSection
    { 
        $current = $this_Section_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getSectionFragmentParserRuleCall_17()); 
    }
    this_SectionFragment_17=ruleSectionFragment
    { 
        $current = $this_SectionFragment_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getSetLocaleParserRuleCall_18()); 
    }
    this_SetLocale_18=ruleSetLocale
    { 
        $current = $this_SetLocale_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getTemplateFragmentParserRuleCall_19()); 
    }
    this_TemplateFragment_19=ruleTemplateFragment
    { 
        $current = $this_TemplateFragment_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getTitleParserRuleCall_20()); 
    }
    this_Title_20=ruleTitle
    { 
        $current = $this_Title_20.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getSubTitleParserRuleCall_21()); 
    }
    this_SubTitle_21=ruleSubTitle
    { 
        $current = $this_SubTitle_21.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getVerseParserRuleCall_22()); 
    }
    this_Verse_22=ruleVerse
    { 
        $current = $this_Verse_22.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenDateParserRuleCall_23()); 
    }
    this_WhenDate_23=ruleWhenDate
    { 
        $current = $this_WhenDate_23.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenDayNameParserRuleCall_24()); 
    }
    this_WhenDayName_24=ruleWhenDayName
    { 
        $current = $this_WhenDayName_24.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenExistsParserRuleCall_25()); 
    }
    this_WhenExists_25=ruleWhenExists
    { 
        $current = $this_WhenExists_25.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenLukanCycleDayParserRuleCall_26()); 
    }
    this_WhenLukanCycleDay_26=ruleWhenLukanCycleDay
    { 
        $current = $this_WhenLukanCycleDay_26.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenModeOfWeekParserRuleCall_27()); 
    }
    this_WhenModeOfWeek_27=ruleWhenModeOfWeek
    { 
        $current = $this_WhenModeOfWeek_27.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenMovableCycleDayParserRuleCall_28()); 
    }
    this_WhenMovableCycleDay_28=ruleWhenMovableCycleDay
    { 
        $current = $this_WhenMovableCycleDay_28.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenPaschaParserRuleCall_29()); 
    }
    this_WhenPascha_29=ruleWhenPascha
    { 
        $current = $this_WhenPascha_29.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenPentecostarionDayParserRuleCall_30()); 
    }
    this_WhenPentecostarionDay_30=ruleWhenPentecostarionDay
    { 
        $current = $this_WhenPentecostarionDay_30.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenSundayAfterElevationOfCrossDayParserRuleCall_31()); 
    }
    this_WhenSundayAfterElevationOfCrossDay_31=ruleWhenSundayAfterElevationOfCrossDay
    { 
        $current = $this_WhenSundayAfterElevationOfCrossDay_31.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenTriodionDayParserRuleCall_32()); 
    }
    this_WhenTriodionDay_32=ruleWhenTriodionDay
    { 
        $current = $this_WhenTriodionDay_32.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionElementTypeAccess().getWhenSundaysBeforeTriodionParserRuleCall_33()); 
    }
    this_WhenSundaysBeforeTriodion_33=ruleWhenSundaysBeforeTriodion
    { 
        $current = $this_WhenSundaysBeforeTriodion_33.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLdpType
entryRuleLdpType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLdpTypeRule()); }
	 iv_ruleLdpType=ruleLdpType 
	 { $current=$iv_ruleLdpType.current; } 
	 EOF 
;

// Rule LdpType
ruleLdpType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getDOMParserRuleCall_0()); 
    }
    this_DOM_0=ruleDOM
    { 
        $current = $this_DOM_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getDOWNParserRuleCall_1()); 
    }
    this_DOWN_1=ruleDOWN
    { 
        $current = $this_DOWN_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getDOWTParserRuleCall_2()); 
    }
    this_DOWT_2=ruleDOWT
    { 
        $current = $this_DOWT_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getEOWParserRuleCall_3()); 
    }
    this_EOW_3=ruleEOW
    { 
        $current = $this_EOW_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getAllParserRuleCall_4()); 
    }
    this_All_4=ruleAll
    { 
        $current = $this_All_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getGenDateParserRuleCall_5()); 
    }
    this_GenDate_5=ruleGenDate
    { 
        $current = $this_GenDate_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getGenYearParserRuleCall_6()); 
    }
    this_GenYear_6=ruleGenYear
    { 
        $current = $this_GenYear_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getMCDParserRuleCall_7()); 
    }
    this_MCD_7=ruleMCD
    { 
        $current = $this_MCD_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getMOWParserRuleCall_8()); 
    }
    this_MOW_8=ruleMOW
    { 
        $current = $this_MOW_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getNOPParserRuleCall_9()); 
    }
    this_NOP_9=ruleNOP
    { 
        $current = $this_NOP_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getDOPParserRuleCall_10()); 
    }
    this_DOP_10=ruleDOP
    { 
        $current = $this_DOP_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getSAECParserRuleCall_11()); 
    }
    this_SAEC_11=ruleSAEC
    { 
        $current = $this_SAEC_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getSOLParserRuleCall_12()); 
    }
    this_SOL_12=ruleSOL
    { 
        $current = $this_SOL_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getDOLParserRuleCall_13()); 
    }
    this_DOL_13=ruleDOL
    { 
        $current = $this_DOL_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getWOLCParserRuleCall_14()); 
    }
    this_WOLC_14=ruleWOLC
    { 
        $current = $this_WOLC_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getWDOLCParserRuleCall_15()); 
    }
    this_WDOLC_15=ruleWDOLC
    { 
        $current = $this_WDOLC_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLdpTypeAccess().getSBTParserRuleCall_16()); 
    }
    this_SBT_16=ruleSBT
    { 
        $current = $this_SBT_16.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAll
entryRuleAll returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllRule()); }
	 iv_ruleAll=ruleAll 
	 { $current=$iv_ruleAll.current; } 
	 EOF 
;

// Rule All
ruleAll returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_LiturgicalDayProperties_0_0=	'@All_Liturgical_Day_Properties' 
    {
        newLeafNode(lv_dsl_Display_LiturgicalDayProperties_0_0, grammarAccess.getAllAccess().getDsl_Display_LiturgicalDayPropertiesAll_Liturgical_Day_PropertiesKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAllRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_LiturgicalDayProperties", true, "@All_Liturgical_Day_Properties");
	    }

)
)
;





// Entry rule entryRuleGenDate
entryRuleGenDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenDateRule()); }
	 iv_ruleGenDate=ruleGenDate 
	 { $current=$iv_ruleGenDate.current; } 
	 EOF 
;

// Rule GenDate
ruleGenDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Date_0_0=	'@Service_Date' 
    {
        newLeafNode(lv_dsl_Display_Date_0_0, grammarAccess.getGenDateAccess().getDsl_Display_DateService_DateKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenDateRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Date", true, "@Service_Date");
	    }

)
)
;





// Entry rule entryRuleGenYear
entryRuleGenYear returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGenYearRule()); }
	 iv_ruleGenYear=ruleGenYear 
	 { $current=$iv_ruleGenYear.current; } 
	 EOF 
;

// Rule GenYear
ruleGenYear returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Year_0_0=	'@Service_Year' 
    {
        newLeafNode(lv_dsl_Display_Year_0_0, grammarAccess.getGenYearAccess().getDsl_Display_YearService_YearKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGenYearRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Year", true, "@Service_Year");
	    }

)
)
;





// Entry rule entryRuleMCD
entryRuleMCD returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMCDRule()); }
	 iv_ruleMCD=ruleMCD 
	 { $current=$iv_ruleMCD.current; } 
	 EOF 
;

// Rule MCD
ruleMCD returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_MCD_value_0_0=	'@Day_of_Movable_Cycle' 
    {
        newLeafNode(lv_dsl_MCD_value_0_0, grammarAccess.getMCDAccess().getDsl_MCD_valueDay_of_Movable_CycleKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMCDRule());
	        }
       		setWithLastConsumed($current, "dsl_MCD_value", true, "@Day_of_Movable_Cycle");
	    }

)
)
;





// Entry rule entryRuleMOW
entryRuleMOW returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMOWRule()); }
	 iv_ruleMOW=ruleMOW 
	 { $current=$iv_ruleMOW.current; } 
	 EOF 
;

// Rule MOW
ruleMOW returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Mode_of_Week' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getMOWAccess().getDsl_Display_ModeMode_of_WeekKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMOWRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Mode_of_Week");
	    }

)
)
;





// Entry rule entryRuleNOP
entryRuleNOP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNOPRule()); }
	 iv_ruleNOP=ruleNOP 
	 { $current=$iv_ruleNOP.current; } 
	 EOF 
;

// Rule NOP
ruleNOP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Name_of_Period' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getNOPAccess().getDsl_Display_ModeName_of_PeriodKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNOPRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Name_of_Period");
	    }

)
)
;





// Entry rule entryRuleDOM
entryRuleDOM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOMRule()); }
	 iv_ruleDOM=ruleDOM 
	 { $current=$iv_ruleDOM.current; } 
	 EOF 
;

// Rule DOM
ruleDOM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Day_of_Month' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getDOMAccess().getDsl_Display_ModeDay_of_MonthKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDOMRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Day_of_Month");
	    }

)
)
;





// Entry rule entryRuleDOP
entryRuleDOP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOPRule()); }
	 iv_ruleDOP=ruleDOP 
	 { $current=$iv_ruleDOP.current; } 
	 EOF 
;

// Rule DOP
ruleDOP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Day_of_Period' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getDOPAccess().getDsl_Display_ModeDay_of_PeriodKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDOPRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Day_of_Period");
	    }

)
)
;





// Entry rule entryRuleDOWN
entryRuleDOWN returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOWNRule()); }
	 iv_ruleDOWN=ruleDOWN 
	 { $current=$iv_ruleDOWN.current; } 
	 EOF 
;

// Rule DOWN
ruleDOWN returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Day_of_Week_As_Number' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getDOWNAccess().getDsl_Display_ModeDay_of_Week_As_NumberKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDOWNRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Day_of_Week_As_Number");
	    }

)
)
;





// Entry rule entryRuleDOWT
entryRuleDOWT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOWTRule()); }
	 iv_ruleDOWT=ruleDOWT 
	 { $current=$iv_ruleDOWT.current; } 
	 EOF 
;

// Rule DOWT
ruleDOWT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Mode_0_0=	'@Day_of_Week_As_Text' 
    {
        newLeafNode(lv_dsl_Display_Mode_0_0, grammarAccess.getDOWTAccess().getDsl_Display_ModeDay_of_Week_As_TextKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDOWTRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Mode", true, "@Day_of_Week_As_Text");
	    }

)
)
;





// Entry rule entryRuleEOW
entryRuleEOW returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEOWRule()); }
	 iv_ruleEOW=ruleEOW 
	 { $current=$iv_ruleEOW.current; } 
	 EOF 
;

// Rule EOW
ruleEOW returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_Eothinon_0_0=	'@Eothinon' 
    {
        newLeafNode(lv_dsl_Display_Eothinon_0_0, grammarAccess.getEOWAccess().getDsl_Display_EothinonEothinonKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEOWRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_Eothinon", true, "@Eothinon");
	    }

)
)
;





// Entry rule entryRuleSAEC
entryRuleSAEC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSAECRule()); }
	 iv_ruleSAEC=ruleSAEC 
	 { $current=$iv_ruleSAEC.current; } 
	 EOF 
;

// Rule SAEC
ruleSAEC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_SundayAfterElevationCross_0_0=	'@Sunday_After_Elevation_Cross_Date' 
    {
        newLeafNode(lv_dsl_Display_SundayAfterElevationCross_0_0, grammarAccess.getSAECAccess().getDsl_Display_SundayAfterElevationCrossSunday_After_Elevation_Cross_DateKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSAECRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_SundayAfterElevationCross", true, "@Sunday_After_Elevation_Cross_Date");
	    }

)
)
;





// Entry rule entryRuleSOL
entryRuleSOL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSOLRule()); }
	 iv_ruleSOL=ruleSOL 
	 { $current=$iv_ruleSOL.current; } 
	 EOF 
;

// Rule SOL
ruleSOL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_StartLukan_0_0=	'@Lukan_Cycle_Start_Date' 
    {
        newLeafNode(lv_dsl_Display_StartLukan_0_0, grammarAccess.getSOLAccess().getDsl_Display_StartLukanLukan_Cycle_Start_DateKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSOLRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_StartLukan", true, "@Lukan_Cycle_Start_Date");
	    }

)
)
;





// Entry rule entryRuleDOL
entryRuleDOL returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDOLRule()); }
	 iv_ruleDOL=ruleDOL 
	 { $current=$iv_ruleDOL.current; } 
	 EOF 
;

// Rule DOL
ruleDOL returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_DayLukan_0_0=	'@Lukan_Cycle_Elapsed_Days' 
    {
        newLeafNode(lv_dsl_Display_DayLukan_0_0, grammarAccess.getDOLAccess().getDsl_Display_DayLukanLukan_Cycle_Elapsed_DaysKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDOLRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_DayLukan", true, "@Lukan_Cycle_Elapsed_Days");
	    }

)
)
;





// Entry rule entryRuleWOLC
entryRuleWOLC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWOLCRule()); }
	 iv_ruleWOLC=ruleWOLC 
	 { $current=$iv_ruleWOLC.current; } 
	 EOF 
;

// Rule WOLC
ruleWOLC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_DayLukan_0_0=	'@Lukan_Cycle_Week' 
    {
        newLeafNode(lv_dsl_Display_DayLukan_0_0, grammarAccess.getWOLCAccess().getDsl_Display_DayLukanLukan_Cycle_WeekKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWOLCRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_DayLukan", true, "@Lukan_Cycle_Week");
	    }

)
)
;





// Entry rule entryRuleWDOLC
entryRuleWDOLC returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWDOLCRule()); }
	 iv_ruleWDOLC=ruleWDOLC 
	 { $current=$iv_ruleWDOLC.current; } 
	 EOF 
;

// Rule WDOLC
ruleWDOLC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_DayLukan_0_0=	'@Lukan_Cycle_Week_Day' 
    {
        newLeafNode(lv_dsl_Display_DayLukan_0_0, grammarAccess.getWDOLCAccess().getDsl_Display_DayLukanLukan_Cycle_Week_DayKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWDOLCRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_DayLukan", true, "@Lukan_Cycle_Week_Day");
	    }

)
)
;





// Entry rule entryRuleSBT
entryRuleSBT returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSBTRule()); }
	 iv_ruleSBT=ruleSBT 
	 { $current=$iv_ruleSBT.current; } 
	 EOF 
;

// Rule SBT
ruleSBT returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_Display_SundaysBeforeTriodion_0_0=	'@Sundays_Before_Triodion' 
    {
        newLeafNode(lv_dsl_Display_SundaysBeforeTriodion_0_0, grammarAccess.getSBTAccess().getDsl_Display_SundaysBeforeTriodionSundays_Before_TriodionKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSBTRule());
	        }
       		setWithLastConsumed($current, "dsl_Display_SundaysBeforeTriodion", true, "@Sundays_Before_Triodion");
	    }

)
)
;





// Entry rule entryRuleTemplateFragment
entryRuleTemplateFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateFragmentRule()); }
	 iv_ruleTemplateFragment=ruleTemplateFragment 
	 { $current=$iv_ruleTemplateFragment.current; } 
	 EOF 
;

// Rule TemplateFragment
ruleTemplateFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Insert_template' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateFragmentAccess().getInsert_templateKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateFragmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTemplateFragmentAccess().getNameAtemModelCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='End-Insert' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateFragmentAccess().getEndInsertKeyword_2());
    }
)
;







// Entry rule entryRuleSectionFragment
entryRuleSectionFragment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionFragmentRule()); }
	 iv_ruleSectionFragment=ruleSectionFragment 
	 { $current=$iv_ruleSectionFragment.current; } 
	 EOF 
;

// Rule SectionFragment
ruleSectionFragment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Insert_section' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSectionFragmentAccess().getInsert_sectionKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSectionFragmentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSectionFragmentAccess().getNameSectionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='End-Insert' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSectionFragmentAccess().getEndInsertKeyword_2());
    }
)
;





// Entry rule entryRuleBreak
entryRuleBreak returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBreakRule()); }
	 iv_ruleBreak=ruleBreak 
	 { $current=$iv_ruleBreak.current; } 
	 EOF 
;

// Rule Break
ruleBreak returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Break' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBreakAccess().getBreakKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBreakAccess().getDsl_break_typeBreakTypeEnumRuleCall_1_0()); 
	    }
		lv_dsl_break_type_1_0=ruleBreakType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBreakRule());
	        }
       		set(
       			$current, 
       			"dsl_break_type",
        		lv_dsl_break_type_1_0, 
        		"BreakType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='End_Break' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBreakAccess().getEnd_BreakKeyword_2());
    }
)
;





// Entry rule entryRulePageNumber
entryRulePageNumber returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPageNumberRule()); }
	 iv_rulePageNumber=rulePageNumber 
	 { $current=$iv_rulePageNumber.current; } 
	 EOF 
;

// Rule PageNumber
rulePageNumber returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Set_Page_Number' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPageNumberAccess().getSet_Page_NumberKeyword_0());
    }
(
(
		lv_dsl_PageNumber_value_1_0=RULE_INT
		{
			newLeafNode(lv_dsl_PageNumber_value_1_0, grammarAccess.getPageNumberAccess().getDsl_PageNumber_valueINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPageNumberRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_PageNumber_value",
        		lv_dsl_PageNumber_value_1_0, 
        		"INT");
	    }

)
)	otherlv_2='End_Set_Page_Number' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPageNumberAccess().getEnd_Set_Page_NumberKeyword_2());
    }
)
;





// Entry rule entryRulePassThroughHtml
entryRulePassThroughHtml returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPassThroughHtmlRule()); }
	 iv_rulePassThroughHtml=rulePassThroughHtml 
	 { $current=$iv_rulePassThroughHtml.current; } 
	 EOF 
;

// Rule PassThroughHtml
rulePassThroughHtml returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Passthrough-Html' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPassThroughHtmlAccess().getPassthroughHtmlKeyword_0());
    }
(
(
		lv_dsl_Passthrough_html_text_1_0=RULE_STRING
		{
			newLeafNode(lv_dsl_Passthrough_html_text_1_0, grammarAccess.getPassThroughHtmlAccess().getDsl_Passthrough_html_textSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPassThroughHtmlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Passthrough_html_text",
        		lv_dsl_Passthrough_html_text_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='END-Passthrough-Html' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPassThroughHtmlAccess().getENDPassthroughHtmlKeyword_2());
    }
)
;





// Entry rule entryRulePassThroughPdf
entryRulePassThroughPdf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPassThroughPdfRule()); }
	 iv_rulePassThroughPdf=rulePassThroughPdf 
	 { $current=$iv_rulePassThroughPdf.current; } 
	 EOF 
;

// Rule PassThroughPdf
rulePassThroughPdf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Passthrough-Html' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPassThroughPdfAccess().getPassthroughHtmlKeyword_0());
    }
(
(
		lv_dsl_Passthrough_pdf_text_1_0=RULE_STRING
		{
			newLeafNode(lv_dsl_Passthrough_pdf_text_1_0, grammarAccess.getPassThroughPdfAccess().getDsl_Passthrough_pdf_textSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPassThroughPdfRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Passthrough_pdf_text",
        		lv_dsl_Passthrough_pdf_text_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='END-Passthrough-Pdf' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPassThroughPdfAccess().getENDPassthroughPdfKeyword_2());
    }
)
;





// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	 iv_ruleTitle=ruleTitle 
	 { $current=$iv_ruleTitle.current; } 
	 EOF 
;

// Rule Title
ruleTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Title' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTitleAccess().getTitleKeyword_0());
    }
(	otherlv_1='role' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTitleAccess().getRoleKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTitleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTitleAccess().getDsl_Title_RoleDefinitionCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTitleAccess().getDsl_ElementsElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Elements_3_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTitleRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_3_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='End-Title' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTitleAccess().getEndTitleKeyword_3());
    }
)
;





// Entry rule entryRuleSubTitle
entryRuleSubTitle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubTitleRule()); }
	 iv_ruleSubTitle=ruleSubTitle 
	 { $current=$iv_ruleSubTitle.current; } 
	 EOF 
;

// Rule SubTitle
ruleSubTitle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Sub-Title' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubTitleAccess().getSubTitleKeyword_0());
    }
(	otherlv_1='role' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubTitleAccess().getRoleKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubTitleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubTitleAccess().getDsl_SubTitle_RoleDefinitionCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSubTitleAccess().getDsl_ElementsElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Elements_3_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubTitleRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_3_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='End-Sub-Title' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubTitleAccess().getEndSubTitleKeyword_3());
    }
)
;





// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	 iv_ruleParagraph=ruleParagraph 
	 { $current=$iv_ruleParagraph.current; } 
	 EOF 
;

// Rule Paragraph
ruleParagraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Para' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParagraphAccess().getParaKeyword_0());
    }
(	otherlv_1='role' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParagraphAccess().getRoleKeyword_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getParagraphRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getParagraphAccess().getDsl_Para_RoleDefinitionCrossReference_1_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getParagraphAccess().getDsl_ElementsElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Elements_3_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParagraphRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_3_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='End-Para' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParagraphAccess().getEndParaKeyword_3());
    }
)
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bTag' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getBTagKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getDsl_Block_RoleDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getDsl_ElementsElementTypeParserRuleCall_2_0()); 
	    }
		lv_dsl_Elements_2_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_2_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='End-bTag' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getEndBTagKeyword_3());
    }
)
;





// Entry rule entryRuleHymn
entryRuleHymn returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHymnRule()); }
	 iv_ruleHymn=ruleHymn 
	 { $current=$iv_ruleHymn.current; } 
	 EOF 
;

// Rule Hymn
ruleHymn returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Hymn' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHymnAccess().getHymnKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHymnAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHymnRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Hymn' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHymnAccess().getEndHymnKeyword_2());
    }
)
;





// Entry rule entryRuleMedia
entryRuleMedia returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMediaRule()); }
	 iv_ruleMedia=ruleMedia 
	 { $current=$iv_ruleMedia.current; } 
	 EOF 
;

// Rule Media
ruleMedia returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Media' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMediaAccess().getMediaKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMediaAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMediaRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Media' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMediaAccess().getEndMediaKeyword_2());
    }
)
;





// Entry rule entryRuleVerse
entryRuleVerse returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerseRule()); }
	 iv_ruleVerse=ruleVerse 
	 { $current=$iv_ruleVerse.current; } 
	 EOF 
;

// Rule Verse
ruleVerse returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Verse' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerseAccess().getVerseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerseAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerseRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Verse' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVerseAccess().getEndVerseKeyword_2());
    }
)
;





// Entry rule entryRuleActor
entryRuleActor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorRule()); }
	 iv_ruleActor=ruleActor 
	 { $current=$iv_ruleActor.current; } 
	 EOF 
;

// Rule Actor
ruleActor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Actor' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActorAccess().getActorKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Actor' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActorAccess().getEndActorKeyword_2());
    }
)
;





// Entry rule entryRuleRubric
entryRuleRubric returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRubricRule()); }
	 iv_ruleRubric=ruleRubric 
	 { $current=$iv_ruleRubric.current; } 
	 EOF 
;

// Rule Rubric
ruleRubric returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Rubric' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRubricAccess().getRubricKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRubricAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRubricRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Rubric' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRubricAccess().getEndRubricKeyword_2());
    }
)
;





// Entry rule entryRuleDialog
entryRuleDialog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDialogRule()); }
	 iv_ruleDialog=ruleDialog 
	 { $current=$iv_ruleDialog.current; } 
	 EOF 
;

// Rule Dialog
ruleDialog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Dialog' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDialogAccess().getDialogKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDialogAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDialogRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Dialog' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDialogAccess().getEndDialogKeyword_2());
    }
)
;





// Entry rule entryRuleReading
entryRuleReading returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReadingRule()); }
	 iv_ruleReading=ruleReading 
	 { $current=$iv_ruleReading.current; } 
	 EOF 
;

// Rule Reading
ruleReading returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Reading' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReadingAccess().getReadingKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReadingAccess().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadingRule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End-Reading' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReadingAccess().getEndReadingKeyword_2());
    }
)
;





// Entry rule entryRuleHeading1
entryRuleHeading1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading1Rule()); }
	 iv_ruleHeading1=ruleHeading1 
	 { $current=$iv_ruleHeading1.current; } 
	 EOF 
;

// Rule Heading1
ruleHeading1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Heading_1' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading1Access().getHeading_1Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading1Access().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading1Rule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End_Heading_1' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading1Access().getEnd_Heading_1Keyword_2());
    }
)
;





// Entry rule entryRuleHeading2
entryRuleHeading2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading2Rule()); }
	 iv_ruleHeading2=ruleHeading2 
	 { $current=$iv_ruleHeading2.current; } 
	 EOF 
;

// Rule Heading2
ruleHeading2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Heading_2' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading2Access().getHeading_2Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading2Access().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading2Rule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End_Heading_2' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading2Access().getEnd_Heading_2Keyword_2());
    }
)
;





// Entry rule entryRuleHeading3
entryRuleHeading3 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeading3Rule()); }
	 iv_ruleHeading3=ruleHeading3 
	 { $current=$iv_ruleHeading3.current; } 
	 EOF 
;

// Rule Heading3
ruleHeading3 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Heading_3' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHeading3Access().getHeading_3Keyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHeading3Access().getDsl_ElementsElementTypeParserRuleCall_1_0()); 
	    }
		lv_dsl_Elements_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeading3Rule());
	        }
       		add(
       			$current, 
       			"dsl_Elements",
        		lv_dsl_Elements_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_2='End_Heading_3' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHeading3Access().getEnd_Heading_3Keyword_2());
    }
)
;





// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	 iv_ruleElementType=ruleElementType 
	 { $current=$iv_ruleElementType.current; } 
	 EOF 
;

// Rule ElementType
ruleElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getResourceTextParserRuleCall_0()); 
    }
    this_ResourceText_0=ruleResourceText
    { 
        $current = $this_ResourceText_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getTaggedTextParserRuleCall_1()); 
    }
    this_TaggedText_1=ruleTaggedText
    { 
        $current = $this_TaggedText_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getLookupParserRuleCall_2()); 
    }
    this_Lookup_2=ruleLookup
    { 
        $current = $this_Lookup_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getLDPParserRuleCall_3()); 
    }
    this_LDP_3=ruleLDP
    { 
        $current = $this_LDP_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAid
entryRuleAid returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAidRule()); }
	 iv_ruleAid=ruleAid 
	 { $current=$iv_ruleAid.current; } 
	 EOF 
;

// Rule Aid
ruleAid returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='AGES_ID' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAidAccess().getAGES_IDKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAidAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAidRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Version' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVersionAccess().getVersionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLitBook
entryRuleLitBook returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLitBookRule()); }
	 iv_ruleLitBook=ruleLitBook 
	 { $current=$iv_ruleLitBook.current; } 
	 EOF 
;

// Rule LitBook
ruleLitBook returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LiturgicalBook' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLitBookAccess().getLiturgicalBookKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLitBookAccess().getNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLitBookRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSetLocale
entryRuleSetLocale returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetLocaleRule()); }
	 iv_ruleSetLocale=ruleSetLocale 
	 { $current=$iv_ruleSetLocale.current; } 
	 EOF 
;

// Rule SetLocale
ruleSetLocale returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Set_Locale' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSetLocaleAccess().getSet_LocaleKeyword_0());
    }
	otherlv_1='locale_1' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetLocaleAccess().getLocale_1Keyword_1());
    }
(
(
		lv_dsl_SetLocale_V1_2_0=RULE_STRING
		{
			newLeafNode(lv_dsl_SetLocale_V1_2_0, grammarAccess.getSetLocaleAccess().getDsl_SetLocale_V1STRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetLocaleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_SetLocale_V1",
        		lv_dsl_SetLocale_V1_2_0, 
        		"STRING");
	    }

)
)	otherlv_3='locale_2' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetLocaleAccess().getLocale_2Keyword_3());
    }
(
(
		lv_dsl_SetLocale_V2_4_0=RULE_STRING
		{
			newLeafNode(lv_dsl_SetLocale_V2_4_0, grammarAccess.getSetLocaleAccess().getDsl_SetLocale_V2STRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSetLocaleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_SetLocale_V2",
        		lv_dsl_SetLocale_V2_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='End_Set_Locale' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSetLocaleAccess().getEnd_Set_LocaleKeyword_5());
    }
)
;





// Entry rule entryRuleRestoreLocale
entryRuleRestoreLocale returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRestoreLocaleRule()); }
	 iv_ruleRestoreLocale=ruleRestoreLocale 
	 { $current=$iv_ruleRestoreLocale.current; } 
	 EOF 
;

// Rule RestoreLocale
ruleRestoreLocale returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_dsl_RestoreLocale_0_0=	'@restoreLocale' 
    {
        newLeafNode(lv_dsl_RestoreLocale_0_0, grammarAccess.getRestoreLocaleAccess().getDsl_RestoreLocaleRestoreLocaleKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRestoreLocaleRule());
	        }
       		setWithLastConsumed($current, "dsl_RestoreLocale", true, "@restoreLocale");
	    }

)
)
;





// Entry rule entryRuleWhenDate
entryRuleWhenDate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenDateRule()); }
	 iv_ruleWhenDate=ruleWhenDate 
	 { $current=$iv_ruleWhenDate.current; } 
	 EOF 
;

// Rule WhenDate
ruleWhenDate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-date-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenDateAccess().getWhenDateIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDateAccess().getDsl_WhenDate_CasesWhenDateCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenDate_Cases_1_0=ruleWhenDateCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDateRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenDate_Cases",
        		lv_dsl_WhenDate_Cases_1_0, 
        		"WhenDateCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDateAccess().getDsl_WhenDate_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenDate_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDateRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenDate_Other",
        		lv_dsl_WhenDate_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenDateAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenDateCase
entryRuleWhenDateCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenDateCaseRule()); }
	 iv_ruleWhenDateCase=ruleWhenDateCase 
	 { $current=$iv_ruleWhenDateCase.current; } 
	 EOF 
;

// Rule WhenDateCase
ruleWhenDateCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDateCaseAccess().getDsl_WhenDate_Case_MonthMonthNameEnumRuleCall_0_0()); 
	    }
		lv_dsl_WhenDate_Case_Month_0_0=ruleMonthName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDateCaseRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenDate_Case_Month",
        		lv_dsl_WhenDate_Case_Month_0_0, 
        		"MonthName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDateCaseAccess().getDsl_WhenDateCase_DaysAbstractDateCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenDateCase_Days_1_0=ruleAbstractDateCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDateCaseRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenDateCase_Days",
        		lv_dsl_WhenDateCase_Days_1_0, 
        		"AbstractDateCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='use:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhenDateCaseAccess().getUseKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDateCaseAccess().getDsl_WhenDateCase_True_actionsAbstractComponentParserRuleCall_3_0()); 
	    }
		lv_dsl_WhenDateCase_True_actions_3_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDateCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenDateCase_True_actions",
        		lv_dsl_WhenDateCase_True_actions_3_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractDateCase
entryRuleAbstractDateCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDateCaseRule()); }
	 iv_ruleAbstractDateCase=ruleAbstractDateCase 
	 { $current=$iv_ruleAbstractDateCase.current; } 
	 EOF 
;

// Rule AbstractDateCase
ruleAbstractDateCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractDateCaseAccess().getDateRangeParserRuleCall_0()); 
    }
    this_DateRange_0=ruleDateRange
    { 
        $current = $this_DateRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractDateCaseAccess().getDateSetParserRuleCall_1()); 
    }
    this_DateSet_1=ruleDateSet
    { 
        $current = $this_DateSet_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDateRange
entryRuleDateRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateRangeRule()); }
	 iv_ruleDateRange=ruleDateRange 
	 { $current=$iv_ruleDateRange.current; } 
	 EOF 
;

// Rule DateRange
ruleDateRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dsl_DateRange_from_0_0=RULE_INT
		{
			newLeafNode(lv_dsl_DateRange_from_0_0, grammarAccess.getDateRangeAccess().getDsl_DateRange_fromINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_DateRange_from",
        		lv_dsl_DateRange_from_0_0, 
        		"INT");
	    }

)
)	otherlv_1='thru' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateRangeAccess().getThruKeyword_1());
    }
(
(
		lv_dsl_DateRange_To_2_0=RULE_INT
		{
			newLeafNode(lv_dsl_DateRange_To_2_0, grammarAccess.getDateRangeAccess().getDsl_DateRange_ToINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_DateRange_To",
        		lv_dsl_DateRange_To_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleDateSet
entryRuleDateSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateSetRule()); }
	 iv_ruleDateSet=ruleDateSet 
	 { $current=$iv_ruleDateSet.current; } 
	 EOF 
;

// Rule DateSet
ruleDateSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dslDateSet_Values_0_0=RULE_INT
		{
			newLeafNode(lv_dslDateSet_Values_0_0, grammarAccess.getDateSetAccess().getDslDateSet_ValuesINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateSetRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dslDateSet_Values",
        		lv_dslDateSet_Values_0_0, 
        		"INT");
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateSetAccess().getCommaKeyword_1_0());
    }
(
(
		lv_dslDateSet_Values_2_0=RULE_INT
		{
			newLeafNode(lv_dslDateSet_Values_2_0, grammarAccess.getDateSetAccess().getDslDateSet_ValuesINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDateSetRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dslDateSet_Values",
        		lv_dslDateSet_Values_2_0, 
        		"INT");
	    }

)
))*)
;





// Entry rule entryRuleWhenDayName
entryRuleWhenDayName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenDayNameRule()); }
	 iv_ruleWhenDayName=ruleWhenDayName 
	 { $current=$iv_ruleWhenDayName.current; } 
	 EOF 
;

// Rule WhenDayName
ruleWhenDayName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-name-of-day-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenDayNameAccess().getWhenNameOfDayIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDayNameAccess().getDsl_WhenDayName_CasesWhenDayNameCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenDayName_Cases_1_0=ruleWhenDayNameCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDayNameRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenDayName_Cases",
        		lv_dsl_WhenDayName_Cases_1_0, 
        		"WhenDayNameCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDayNameAccess().getDsl_WhenDayName_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenDayName_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDayNameRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenDayName_Other",
        		lv_dsl_WhenDayName_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenDayNameAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenDayNameCase
entryRuleWhenDayNameCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenDayNameCaseRule()); }
	 iv_ruleWhenDayNameCase=ruleWhenDayNameCase 
	 { $current=$iv_ruleWhenDayNameCase.current; } 
	 EOF 
;

// Rule WhenDayNameCase
ruleWhenDayNameCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDayNameCaseAccess().getDsl_WhenDayNameCase_DaysAbstractDayNameCaseParserRuleCall_0_0()); 
	    }
		lv_dsl_WhenDayNameCase_Days_0_0=ruleAbstractDayNameCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDayNameCaseRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenDayNameCase_Days",
        		lv_dsl_WhenDayNameCase_Days_0_0, 
        		"AbstractDayNameCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='use:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhenDayNameCaseAccess().getUseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenDayNameCaseAccess().getDsl_WhenDayNameCase_True_actionsAbstractComponentParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenDayNameCase_True_actions_2_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenDayNameCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenDayNameCase_True_actions",
        		lv_dsl_WhenDayNameCase_True_actions_2_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractDayNameCase
entryRuleAbstractDayNameCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDayNameCaseRule()); }
	 iv_ruleAbstractDayNameCase=ruleAbstractDayNameCase 
	 { $current=$iv_ruleAbstractDayNameCase.current; } 
	 EOF 
;

// Rule AbstractDayNameCase
ruleAbstractDayNameCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractDayNameCaseAccess().getDayNameRangeParserRuleCall_0()); 
    }
    this_DayNameRange_0=ruleDayNameRange
    { 
        $current = $this_DayNameRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractDayNameCaseAccess().getDayNameSetParserRuleCall_1()); 
    }
    this_DayNameSet_1=ruleDayNameSet
    { 
        $current = $this_DayNameSet_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDayNameRange
entryRuleDayNameRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDayNameRangeRule()); }
	 iv_ruleDayNameRange=ruleDayNameRange 
	 { $current=$iv_ruleDayNameRange.current; } 
	 EOF 
;

// Rule DayNameRange
ruleDayNameRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDayNameRangeAccess().getDsl_DayNameRange_fromDayOfWeekEnumRuleCall_0_0()); 
	    }
		lv_dsl_DayNameRange_from_0_0=ruleDayOfWeek		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDayNameRangeRule());
	        }
       		set(
       			$current, 
       			"dsl_DayNameRange_from",
        		lv_dsl_DayNameRange_from_0_0, 
        		"DayOfWeek");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='thru' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDayNameRangeAccess().getThruKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDayNameRangeAccess().getDsl_DayNameRange_ToDayOfWeekEnumRuleCall_2_0()); 
	    }
		lv_dsl_DayNameRange_To_2_0=ruleDayOfWeek		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDayNameRangeRule());
	        }
       		set(
       			$current, 
       			"dsl_DayNameRange_To",
        		lv_dsl_DayNameRange_To_2_0, 
        		"DayOfWeek");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDayNameSet
entryRuleDayNameSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDayNameSetRule()); }
	 iv_ruleDayNameSet=ruleDayNameSet 
	 { $current=$iv_ruleDayNameSet.current; } 
	 EOF 
;

// Rule DayNameSet
ruleDayNameSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDayNameSetAccess().getDslDayNameSet_ValuesDayOfWeekEnumRuleCall_0_0()); 
	    }
		lv_dslDayNameSet_Values_0_0=ruleDayOfWeek		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDayNameSetRule());
	        }
       		add(
       			$current, 
       			"dslDayNameSet_Values",
        		lv_dslDayNameSet_Values_0_0, 
        		"DayOfWeek");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDayNameSetAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDayNameSetAccess().getDslDayNameSet_ValuesDayOfWeekEnumRuleCall_1_1_0()); 
	    }
		lv_dslDayNameSet_Values_2_0=ruleDayOfWeek		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDayNameSetRule());
	        }
       		add(
       			$current, 
       			"dslDayNameSet_Values",
        		lv_dslDayNameSet_Values_2_0, 
        		"DayOfWeek");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleWhenPentecostarionDay
entryRuleWhenPentecostarionDay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenPentecostarionDayRule()); }
	 iv_ruleWhenPentecostarionDay=ruleWhenPentecostarionDay 
	 { $current=$iv_ruleWhenPentecostarionDay.current; } 
	 EOF 
;

// Rule WhenPentecostarionDay
ruleWhenPentecostarionDay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-pentecostarion-day-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenPentecostarionDayAccess().getWhenPentecostarionDayIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPentecostarionDayAccess().getDsl_WhenPentecostarionDay_CasesWhenPeriodCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenPentecostarionDay_Cases_1_0=ruleWhenPeriodCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPentecostarionDayRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenPentecostarionDay_Cases",
        		lv_dsl_WhenPentecostarionDay_Cases_1_0, 
        		"WhenPeriodCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPentecostarionDayAccess().getDsl_WhenPentecostarionDay_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenPentecostarionDay_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPentecostarionDayRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenPentecostarionDay_Other",
        		lv_dsl_WhenPentecostarionDay_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenPentecostarionDayAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenTriodionDay
entryRuleWhenTriodionDay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenTriodionDayRule()); }
	 iv_ruleWhenTriodionDay=ruleWhenTriodionDay 
	 { $current=$iv_ruleWhenTriodionDay.current; } 
	 EOF 
;

// Rule WhenTriodionDay
ruleWhenTriodionDay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-triodion-day-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenTriodionDayAccess().getWhenTriodionDayIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenTriodionDayAccess().getDsl_WhenTriodionDay_CasesWhenPeriodCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenTriodionDay_Cases_1_0=ruleWhenPeriodCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenTriodionDayRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenTriodionDay_Cases",
        		lv_dsl_WhenTriodionDay_Cases_1_0, 
        		"WhenPeriodCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenTriodionDayAccess().getDsl_WhenTriodionDay_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenTriodionDay_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenTriodionDayRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenTriodionDay_Other",
        		lv_dsl_WhenTriodionDay_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenTriodionDayAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenMovableCycleDay
entryRuleWhenMovableCycleDay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenMovableCycleDayRule()); }
	 iv_ruleWhenMovableCycleDay=ruleWhenMovableCycleDay 
	 { $current=$iv_ruleWhenMovableCycleDay.current; } 
	 EOF 
;

// Rule WhenMovableCycleDay
ruleWhenMovableCycleDay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-movable-cycle-day-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenMovableCycleDayAccess().getWhenMovableCycleDayIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenMovableCycleDayAccess().getDsl_WhenMovableCycleDay_CasesWhenPeriodCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenMovableCycleDay_Cases_1_0=ruleWhenPeriodCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenMovableCycleDayRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenMovableCycleDay_Cases",
        		lv_dsl_WhenMovableCycleDay_Cases_1_0, 
        		"WhenPeriodCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenMovableCycleDayAccess().getDsl_WhenMovableCycleDay_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenMovableCycleDay_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenMovableCycleDayRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenMovableCycleDay_Other",
        		lv_dsl_WhenMovableCycleDay_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenMovableCycleDayAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenSundayAfterElevationOfCrossDay
entryRuleWhenSundayAfterElevationOfCrossDay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenSundayAfterElevationOfCrossDayRule()); }
	 iv_ruleWhenSundayAfterElevationOfCrossDay=ruleWhenSundayAfterElevationOfCrossDay 
	 { $current=$iv_ruleWhenSundayAfterElevationOfCrossDay.current; } 
	 EOF 
;

// Rule WhenSundayAfterElevationOfCrossDay
ruleWhenSundayAfterElevationOfCrossDay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-Sunday-after-Elevation-of-Cross-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenSundayAfterElevationOfCrossDayAccess().getWhenSundayAfterElevationOfCrossIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenSundayAfterElevationOfCrossDayAccess().getDsl_WhenSundayAfterElevationOfCrossDay_CasesWhenDateCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenSundayAfterElevationOfCrossDay_Cases_1_0=ruleWhenDateCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenSundayAfterElevationOfCrossDayRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenSundayAfterElevationOfCrossDay_Cases",
        		lv_dsl_WhenSundayAfterElevationOfCrossDay_Cases_1_0, 
        		"WhenDateCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenSundayAfterElevationOfCrossDayAccess().getDsl_WhenSundayAfterElevationOfCrossDay_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenSundayAfterElevationOfCrossDay_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenSundayAfterElevationOfCrossDayRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenSundayAfterElevationOfCrossDay_Other",
        		lv_dsl_WhenSundayAfterElevationOfCrossDay_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenSundayAfterElevationOfCrossDayAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenLukanCycleDay
entryRuleWhenLukanCycleDay returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenLukanCycleDayRule()); }
	 iv_ruleWhenLukanCycleDay=ruleWhenLukanCycleDay 
	 { $current=$iv_ruleWhenLukanCycleDay.current; } 
	 EOF 
;

// Rule WhenLukanCycleDay
ruleWhenLukanCycleDay returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-Lukan-Cycle-Day-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenLukanCycleDayAccess().getWhenLukanCycleDayIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenLukanCycleDayAccess().getDsl_WhenLukanCycleDay_CasesWhenPeriodCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenLukanCycleDay_Cases_1_0=ruleWhenPeriodCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenLukanCycleDayRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenLukanCycleDay_Cases",
        		lv_dsl_WhenLukanCycleDay_Cases_1_0, 
        		"WhenPeriodCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenLukanCycleDayAccess().getDsl_WhenLukanCycleDay_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenLukanCycleDay_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenLukanCycleDayRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenLukanCycleDay_Other",
        		lv_dsl_WhenLukanCycleDay_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenLukanCycleDayAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenPascha
entryRuleWhenPascha returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenPaschaRule()); }
	 iv_ruleWhenPascha=ruleWhenPascha 
	 { $current=$iv_ruleWhenPascha.current; } 
	 EOF 
;

// Rule WhenPascha
ruleWhenPascha returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-pascha use:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenPaschaAccess().getWhenPaschaUseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPaschaAccess().getDsl_WhenPascha_true_actionsAbstractComponentParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenPascha_true_actions_1_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPaschaRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenPascha_true_actions",
        		lv_dsl_WhenPascha_true_actions_1_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_2='otherwise use:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhenPaschaAccess().getOtherwiseUseKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPaschaAccess().getDsl_WhenPascha_Other_actionsAbstractComponentParserRuleCall_2_1_0()); 
	    }
		lv_dsl_WhenPascha_Other_actions_3_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPaschaRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenPascha_Other_actions",
        		lv_dsl_WhenPascha_Other_actions_3_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_4='end-when' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWhenPaschaAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenOther
entryRuleWhenOther returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenOtherRule()); }
	 iv_ruleWhenOther=ruleWhenOther 
	 { $current=$iv_ruleWhenOther.current; } 
	 EOF 
;

// Rule WhenOther
ruleWhenOther returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='otherwise use:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenOtherAccess().getOtherwiseUseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenOtherAccess().getDsl_WhenCase_Other_actionsAbstractComponentParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenCase_Other_actions_1_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenOtherRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenCase_Other_actions",
        		lv_dsl_WhenCase_Other_actions_1_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleWhenPeriodCase
entryRuleWhenPeriodCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenPeriodCaseRule()); }
	 iv_ruleWhenPeriodCase=ruleWhenPeriodCase 
	 { $current=$iv_ruleWhenPeriodCase.current; } 
	 EOF 
;

// Rule WhenPeriodCase
ruleWhenPeriodCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPeriodCaseAccess().getDsl_WhenPeriodCase_DaysAbstractDayCaseParserRuleCall_0_0()); 
	    }
		lv_dsl_WhenPeriodCase_Days_0_0=ruleAbstractDayCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPeriodCaseRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenPeriodCase_Days",
        		lv_dsl_WhenPeriodCase_Days_0_0, 
        		"AbstractDayCase");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='use:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhenPeriodCaseAccess().getUseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenPeriodCaseAccess().getDsl_WhenPeriodCase_True_actionsAbstractComponentParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenPeriodCase_True_actions_2_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenPeriodCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenPeriodCase_True_actions",
        		lv_dsl_WhenPeriodCase_True_actions_2_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractDayCase
entryRuleAbstractDayCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDayCaseRule()); }
	 iv_ruleAbstractDayCase=ruleAbstractDayCase 
	 { $current=$iv_ruleAbstractDayCase.current; } 
	 EOF 
;

// Rule AbstractDayCase
ruleAbstractDayCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractDayCaseAccess().getDayRangeParserRuleCall_0()); 
    }
    this_DayRange_0=ruleDayRange
    { 
        $current = $this_DayRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractDayCaseAccess().getDaySetParserRuleCall_1()); 
    }
    this_DaySet_1=ruleDaySet
    { 
        $current = $this_DaySet_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDayRange
entryRuleDayRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDayRangeRule()); }
	 iv_ruleDayRange=ruleDayRange 
	 { $current=$iv_ruleDayRange.current; } 
	 EOF 
;

// Rule DayRange
ruleDayRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dsl_DayRange_from_0_0=RULE_INT
		{
			newLeafNode(lv_dsl_DayRange_from_0_0, grammarAccess.getDayRangeAccess().getDsl_DayRange_fromINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDayRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_DayRange_from",
        		lv_dsl_DayRange_from_0_0, 
        		"INT");
	    }

)
)	otherlv_1='thru' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDayRangeAccess().getThruKeyword_1());
    }
(
(
		lv_dsl_Range_To_2_0=RULE_INT
		{
			newLeafNode(lv_dsl_Range_To_2_0, grammarAccess.getDayRangeAccess().getDsl_Range_ToINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDayRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_Range_To",
        		lv_dsl_Range_To_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleDaySet
entryRuleDaySet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDaySetRule()); }
	 iv_ruleDaySet=ruleDaySet 
	 { $current=$iv_ruleDaySet.current; } 
	 EOF 
;

// Rule DaySet
ruleDaySet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dslSetValue_Days_0_0=RULE_INT
		{
			newLeafNode(lv_dslSetValue_Days_0_0, grammarAccess.getDaySetAccess().getDslSetValue_DaysINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDaySetRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dslSetValue_Days",
        		lv_dslSetValue_Days_0_0, 
        		"INT");
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDaySetAccess().getCommaKeyword_1_0());
    }
(
(
		lv_dslSetValue_Days_2_0=RULE_INT
		{
			newLeafNode(lv_dslSetValue_Days_2_0, grammarAccess.getDaySetAccess().getDslSetValue_DaysINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDaySetRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"dslSetValue_Days",
        		lv_dslSetValue_Days_2_0, 
        		"INT");
	    }

)
))*)
;





// Entry rule entryRuleWhenModeOfWeek
entryRuleWhenModeOfWeek returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenModeOfWeekRule()); }
	 iv_ruleWhenModeOfWeek=ruleWhenModeOfWeek 
	 { $current=$iv_ruleWhenModeOfWeek.current; } 
	 EOF 
;

// Rule WhenModeOfWeek
ruleWhenModeOfWeek returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-mode-of-week-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenModeOfWeekAccess().getWhenModeOfWeekIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenModeOfWeekAccess().getDsl_WhenModeOfWeek_CasesWhenModeOfWeekCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenModeOfWeek_Cases_1_0=ruleWhenModeOfWeekCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenModeOfWeekRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenModeOfWeek_Cases",
        		lv_dsl_WhenModeOfWeek_Cases_1_0, 
        		"WhenModeOfWeekCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenModeOfWeekAccess().getDsl_WhenModeOfWeek_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenModeOfWeek_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenModeOfWeekRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenModeOfWeek_Other",
        		lv_dsl_WhenModeOfWeek_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenModeOfWeekAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenModeOfWeekCase
entryRuleWhenModeOfWeekCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenModeOfWeekCaseRule()); }
	 iv_ruleWhenModeOfWeekCase=ruleWhenModeOfWeekCase 
	 { $current=$iv_ruleWhenModeOfWeekCase.current; } 
	 EOF 
;

// Rule WhenModeOfWeekCase
ruleWhenModeOfWeekCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhenModeOfWeekCaseAccess().getDsl_WhenModeOfWeekCase_DaysModeOfWeekSetParserRuleCall_0_0()); 
	    }
		lv_dsl_WhenModeOfWeekCase_Days_0_0=ruleModeOfWeekSet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenModeOfWeekCaseRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenModeOfWeekCase_Days",
        		lv_dsl_WhenModeOfWeekCase_Days_0_0, 
        		"ModeOfWeekSet");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='use:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhenModeOfWeekCaseAccess().getUseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenModeOfWeekCaseAccess().getDsl_WhenModeOfWeekCase_True_actionsAbstractComponentParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenModeOfWeekCase_True_actions_2_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenModeOfWeekCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenModeOfWeekCase_True_actions",
        		lv_dsl_WhenModeOfWeekCase_True_actions_2_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleModeOfWeekSet
entryRuleModeOfWeekSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModeOfWeekSetRule()); }
	 iv_ruleModeOfWeekSet=ruleModeOfWeekSet 
	 { $current=$iv_ruleModeOfWeekSet.current; } 
	 EOF 
;

// Rule ModeOfWeekSet
ruleModeOfWeekSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModeOfWeekSetAccess().getDsl_ModeOfWeekSet_MOWsModeTypesEnumRuleCall_0_0()); 
	    }
		lv_dsl_ModeOfWeekSet_MOWs_0_0=ruleModeTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeOfWeekSetRule());
	        }
       		add(
       			$current, 
       			"dsl_ModeOfWeekSet_MOWs",
        		lv_dsl_ModeOfWeekSet_MOWs_0_0, 
        		"ModeTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModeOfWeekSetAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModeOfWeekSetAccess().getDsl_ModeOfWeekSet_MOWsModeTypesEnumRuleCall_1_1_0()); 
	    }
		lv_dsl_ModeOfWeekSet_MOWs_2_0=ruleModeTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModeOfWeekSetRule());
	        }
       		add(
       			$current, 
       			"dsl_ModeOfWeekSet_MOWs",
        		lv_dsl_ModeOfWeekSet_MOWs_2_0, 
        		"ModeTypes");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleWhenSundaysBeforeTriodion
entryRuleWhenSundaysBeforeTriodion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenSundaysBeforeTriodionRule()); }
	 iv_ruleWhenSundaysBeforeTriodion=ruleWhenSundaysBeforeTriodion 
	 { $current=$iv_ruleWhenSundaysBeforeTriodion.current; } 
	 EOF 
;

// Rule WhenSundaysBeforeTriodion
ruleWhenSundaysBeforeTriodion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-sundays-before-triodion-is' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenSundaysBeforeTriodionAccess().getWhenSundaysBeforeTriodionIsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenSundaysBeforeTriodionAccess().getDsl_WhenSundaysBeforeTriodion_CasesSundaysBeforeTriodionCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenSundaysBeforeTriodion_Cases_1_0=ruleSundaysBeforeTriodionCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenSundaysBeforeTriodionRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenSundaysBeforeTriodion_Cases",
        		lv_dsl_WhenSundaysBeforeTriodion_Cases_1_0, 
        		"SundaysBeforeTriodionCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenSundaysBeforeTriodionAccess().getDsl_SundaysBeforeTriodion_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_SundaysBeforeTriodion_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenSundaysBeforeTriodionRule());
	        }
       		set(
       			$current, 
       			"dsl_SundaysBeforeTriodion_Other",
        		lv_dsl_SundaysBeforeTriodion_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenSundaysBeforeTriodionAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleSundaysBeforeTriodionCase
entryRuleSundaysBeforeTriodionCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSundaysBeforeTriodionCaseRule()); }
	 iv_ruleSundaysBeforeTriodionCase=ruleSundaysBeforeTriodionCase 
	 { $current=$iv_ruleSundaysBeforeTriodionCase.current; } 
	 EOF 
;

// Rule SundaysBeforeTriodionCase
ruleSundaysBeforeTriodionCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_dsl_SundaysBeforeTriodionCase_Days_0_0=RULE_INT
		{
			newLeafNode(lv_dsl_SundaysBeforeTriodionCase_Days_0_0, grammarAccess.getSundaysBeforeTriodionCaseAccess().getDsl_SundaysBeforeTriodionCase_DaysINTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSundaysBeforeTriodionCaseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dsl_SundaysBeforeTriodionCase_Days",
        		lv_dsl_SundaysBeforeTriodionCase_Days_0_0, 
        		"INT");
	    }

)
)	otherlv_1='use:' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSundaysBeforeTriodionCaseAccess().getUseKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSundaysBeforeTriodionCaseAccess().getDsl_SundaysBeforeTriodionCase_True_actionsAbstractComponentParserRuleCall_2_0()); 
	    }
		lv_dsl_SundaysBeforeTriodionCase_True_actions_2_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSundaysBeforeTriodionCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_SundaysBeforeTriodionCase_True_actions",
        		lv_dsl_SundaysBeforeTriodionCase_True_actions_2_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleWhenExists
entryRuleWhenExists returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenExistsRule()); }
	 iv_ruleWhenExists=ruleWhenExists 
	 { $current=$iv_ruleWhenExists.current; } 
	 EOF 
;

// Rule WhenExists
ruleWhenExists returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when-exists' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenExistsAccess().getWhenExistsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenExistsAccess().getDsl_WhenExists_CasesWhenExistsCaseParserRuleCall_1_0()); 
	    }
		lv_dsl_WhenExists_Cases_1_0=ruleWhenExistsCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenExistsRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenExists_Cases",
        		lv_dsl_WhenExists_Cases_1_0, 
        		"WhenExistsCase");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenExistsAccess().getDsl_WhenExists_OtherWhenOtherParserRuleCall_2_0()); 
	    }
		lv_dsl_WhenExists_Other_2_0=ruleWhenOther		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenExistsRule());
	        }
       		set(
       			$current, 
       			"dsl_WhenExists_Other",
        		lv_dsl_WhenExists_Other_2_0, 
        		"WhenOther");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='end-when' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenExistsAccess().getEndWhenKeyword_3());
    }
)
;





// Entry rule entryRuleWhenExistsCase
entryRuleWhenExistsCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenExistsCaseRule()); }
	 iv_ruleWhenExistsCase=ruleWhenExistsCase 
	 { $current=$iv_ruleWhenExistsCase.current; } 
	 EOF 
;

// Rule WhenExistsCase
ruleWhenExistsCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='rid' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenExistsCaseAccess().getRidKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getWhenExistsCaseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getWhenExistsCaseAccess().getDsl_WhenExistsCase_RefDefinitionCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='use:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWhenExistsCaseAccess().getUseKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenExistsCaseAccess().getDsl_WhenExistsCase_True_actionsAbstractComponentParserRuleCall_3_0()); 
	    }
		lv_dsl_WhenExistsCase_True_actions_3_0=ruleAbstractComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenExistsCaseRule());
	        }
       		add(
       			$current, 
       			"dsl_WhenExistsCase_True_actions",
        		lv_dsl_WhenExistsCase_True_actions_3_0, 
        		"AbstractComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Rule VersionSwitchType
ruleVersionSwitchType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='L1' 
	{
        $current = grammarAccess.getVersionSwitchTypeAccess().getL1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVersionSwitchTypeAccess().getL1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='L2' 
	{
        $current = grammarAccess.getVersionSwitchTypeAccess().getL2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVersionSwitchTypeAccess().getL2EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Both' 
	{
        $current = grammarAccess.getVersionSwitchTypeAccess().getBothEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVersionSwitchTypeAccess().getBothEnumLiteralDeclaration_2()); 
    }
));



// Rule Language
ruleLanguage returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='L1' 
	{
        $current = grammarAccess.getLanguageAccess().getL1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLanguageAccess().getL1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='L2' 
	{
        $current = grammarAccess.getLanguageAccess().getL2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLanguageAccess().getL2EnumLiteralDeclaration_1()); 
    }
));



// Rule BreakType
ruleBreakType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='line' 
	{
        $current = grammarAccess.getBreakTypeAccess().getLineEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBreakTypeAccess().getLineEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='page' 
	{
        $current = grammarAccess.getBreakTypeAccess().getPageEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBreakTypeAccess().getPageEnumLiteralDeclaration_1()); 
    }
));



// Rule TemplateStatuses
ruleTemplateStatuses returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='NA' 
	{
        $current = grammarAccess.getTemplateStatusesAccess().getNAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getTemplateStatusesAccess().getNAEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Draft' 
	{
        $current = grammarAccess.getTemplateStatusesAccess().getDraftEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getTemplateStatusesAccess().getDraftEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Review' 
	{
        $current = grammarAccess.getTemplateStatusesAccess().getReviewEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getTemplateStatusesAccess().getReviewEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Final' 
	{
        $current = grammarAccess.getTemplateStatusesAccess().getFinalEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getTemplateStatusesAccess().getFinalEnumLiteralDeclaration_3()); 
    }
));





// Rule ModeTypes
ruleModeTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='M1' 
	{
        $current = grammarAccess.getModeTypesAccess().getM1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getModeTypesAccess().getM1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='M2' 
	{
        $current = grammarAccess.getModeTypesAccess().getM2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getModeTypesAccess().getM2EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='M3' 
	{
        $current = grammarAccess.getModeTypesAccess().getM3EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getModeTypesAccess().getM3EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='M4' 
	{
        $current = grammarAccess.getModeTypesAccess().getM4EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getModeTypesAccess().getM4EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='M5' 
	{
        $current = grammarAccess.getModeTypesAccess().getM5EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getModeTypesAccess().getM5EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='M6' 
	{
        $current = grammarAccess.getModeTypesAccess().getM6EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getModeTypesAccess().getM6EnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='M7' 
	{
        $current = grammarAccess.getModeTypesAccess().getM7EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getModeTypesAccess().getM7EnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='M8' 
	{
        $current = grammarAccess.getModeTypesAccess().getM8EnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getModeTypesAccess().getM8EnumLiteralDeclaration_7()); 
    }
));



// Rule DowTypes
ruleDowTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='D1' 
	{
        $current = grammarAccess.getDowTypesAccess().getD1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDowTypesAccess().getD1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='D2' 
	{
        $current = grammarAccess.getDowTypesAccess().getD2EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDowTypesAccess().getD2EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='D3' 
	{
        $current = grammarAccess.getDowTypesAccess().getD3EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDowTypesAccess().getD3EnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='D4' 
	{
        $current = grammarAccess.getDowTypesAccess().getD4EnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDowTypesAccess().getD4EnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='D5' 
	{
        $current = grammarAccess.getDowTypesAccess().getD5EnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDowTypesAccess().getD5EnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='D6' 
	{
        $current = grammarAccess.getDowTypesAccess().getD6EnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDowTypesAccess().getD6EnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='D7' 
	{
        $current = grammarAccess.getDowTypesAccess().getD7EnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDowTypesAccess().getD7EnumLiteralDeclaration_6()); 
    }
));











// Rule DayOfWeek
ruleDayOfWeek returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Sunday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getSundayEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDayOfWeekAccess().getSundayEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Monday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getMondayEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDayOfWeekAccess().getMondayEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Tuesday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getTuesdayEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDayOfWeekAccess().getTuesdayEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Wednesday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getWednesdayEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDayOfWeekAccess().getWednesdayEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Thursday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getThursdayEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDayOfWeekAccess().getThursdayEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Friday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getFridayEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDayOfWeekAccess().getFridayEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Saturday' 
	{
        $current = grammarAccess.getDayOfWeekAccess().getSaturdayEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDayOfWeekAccess().getSaturdayEnumLiteralDeclaration_6()); 
    }
));



// Rule MonthName
ruleMonthName returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Jan' 
	{
        $current = grammarAccess.getMonthNameAccess().getJanEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMonthNameAccess().getJanEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Feb' 
	{
        $current = grammarAccess.getMonthNameAccess().getFebEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMonthNameAccess().getFebEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Mar' 
	{
        $current = grammarAccess.getMonthNameAccess().getMarEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMonthNameAccess().getMarEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Apr' 
	{
        $current = grammarAccess.getMonthNameAccess().getAprEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getMonthNameAccess().getAprEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='May' 
	{
        $current = grammarAccess.getMonthNameAccess().getMayEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getMonthNameAccess().getMayEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Jun' 
	{
        $current = grammarAccess.getMonthNameAccess().getJunEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getMonthNameAccess().getJunEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Jul' 
	{
        $current = grammarAccess.getMonthNameAccess().getJulEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getMonthNameAccess().getJulEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Aug' 
	{
        $current = grammarAccess.getMonthNameAccess().getAugEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getMonthNameAccess().getAugEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Sep' 
	{
        $current = grammarAccess.getMonthNameAccess().getSepEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getMonthNameAccess().getSepEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Oct' 
	{
        $current = grammarAccess.getMonthNameAccess().getOctEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getMonthNameAccess().getOctEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='Nov' 
	{
        $current = grammarAccess.getMonthNameAccess().getNovEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getMonthNameAccess().getNovEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='Dec' 
	{
        $current = grammarAccess.getMonthNameAccess().getDecEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getMonthNameAccess().getDecEnumLiteralDeclaration_11()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


