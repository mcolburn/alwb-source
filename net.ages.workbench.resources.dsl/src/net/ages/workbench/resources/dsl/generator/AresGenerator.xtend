/*
 * generated by Xtext
 */
package net.ages.workbench.resources.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import net.ages.workbench.resources.dsl.ares.AresModel
import net.ages.workbench.resources.dsl.ares.Definition
import org.eclipse.emf.ecore.resource.ResourceSet
import net.ages.workbench.resources.utils.AlwbResourceUtils

class AresGenerator implements IGenerator {
	var boolean json = true;
	var boolean mongodb = false;
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {

		var filename = "";
				
		if (json) {

			filename = resource.URI.segmentsList.last.replace("ares","json")
		
			for(e: resource.allContents.toIterable.filter(typeof(AresModel))) {
		  		fsa.generateFile(filename,e.compileJson())  
		    	}   		

		} else if (mongodb){
			filename = resource.URI.segmentsList.last
			var String [] nameParts = AlwbResourceUtils.getAresFileParts(filename)
			
			if (nameParts != null) {
				filename = filename.replace("ares","tsf")
			
				for(e: resource.allContents.toIterable.filter(typeof(AresModel))) {
			  		fsa.generateFile(filename,e.compileMongoDb(nameParts.get(0),nameParts.get(1)))  
			    	}   		
			}
		}
	}
 
	def compileJson(AresModel a) '''
	«FOR d: a.dsl_Model_definitions»
	{'id_' : '«a.name.replaceAll("\\.","|")»|«d.name.replaceAll("\\.","|")»', 'text' : '«d.compile»'}
	«ENDFOR»
	'''

	def compileMongoDb(AresModel a, String prefix, String domain) '''
	«FOR d: a.dsl_Model_definitions»
	«d.name.replaceAll("\\.","|")»~«d.compile»
	«ENDFOR»
	'''

	def compile(Definition d)'''«IF d.dsl_Definition_Ref != null»«d.dsl_Definition_Ref.dsl_Definition_Text»«ENDIF»«IF d.dsl_Definition_Text != null»«d.dsl_Definition_Text»«ENDIF»'''
	
		def listResources(ResourceSet rs, IFileSystemAccess fsa, String file) {
		fsa.generateFile(file,rs.compile)
	}
	
	def compile(ResourceSet rs)'''
	  «FOR r: rs.allContents.toIterable.filter(typeof(AresModel))»
	  File     String: «r.eResource.URI.toFileString»
	  Platform String: «r.eResource.URI.toPlatformString(true)»
	  «ENDFOR»
	'''
}
